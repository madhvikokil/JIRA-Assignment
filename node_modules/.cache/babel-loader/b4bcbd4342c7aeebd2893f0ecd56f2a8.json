{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/tableData.js\";\nimport React from 'react';\nimport FetchBody from './fetchBody';\nimport './tableData.css';\nimport './tableEdit.css';\nexport default {\n  tableHeader: props => {\n    let headerLabelColor = {\n      0: \"#7a864a\",\n      1: \"#42526e\",\n      2: \"#42526e\",\n      3: \"#0747a6\",\n      4: \"#0747a6\",\n      5: \"#006644\",\n      6: \"#006644\",\n      7: \"#0052cc\"\n    };\n    let headerLabelBackgroundColor = {\n      5: \"#e3fcef\",\n      6: \"#e3fcef\",\n      3: \"#deebff\",\n      4: \"#deebff\"\n    };\n    let o = Object.keys(props[0]);\n    return o.map((key, index) => {\n      key.replace(/_/g, ' ');\n\n      if (key == \"open\" || key == \"accepted\" || key == \"in_Progress\" || key == \"review\" || key == \"resolved\" || key == \"done\") {\n        key.replace(/_/g, ' ');\n        return React.createElement(\"th\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          class: \"headerBox\",\n          style: {\n            color: \"\".concat(headerLabelColor[index]),\n            backgroundColor: \"\".concat(headerLabelBackgroundColor[index])\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, key.toUpperCase()));\n      }\n\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  },\n  tableRow: (props, props2) => {\n    let items = props;\n    let item2 = props2;\n    let keys = Object.keys(props[0]);\n\n    if (item2) {\n      return items.map((row, index) => {\n        return React.createElement(\"tr\", {\n          class: \"editRow\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(FetchBody.RenderProgressRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          item: item2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return items.map((row, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(FetchBody.RenderRow, {\n        key: index,\n        data: row,\n        keys: keys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    });\n  },\n  tableFooter: (props, p) => {\n    let colorObject = {\n      0: '#42526e',\n      1: '#42526e',\n      2: '#654982',\n      3: \"#f15c75\",\n      4: \"#14892c\"\n    };\n    let o = Object.values(props);\n    let a = Object.keys(props);\n    console.log(\"footer :\", props);\n\n    if (p) {\n      let color;\n      return o.map((key, index) => React.createElement(\"td\", {\n        class: \"editRow\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, key), \"\\xA0\", React.createElement(\"div\", {\n        class: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"inside\",\n        style: {\n          width: 100 + 'px',\n          backgroundColor: \"\".concat(colorObject[index])\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"_\"), \"\\xA0\"), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"100%\")));\n    } else {\n      return o.map(key => React.createElement(\"td\", {\n        class: \"editRow\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, key)));\n    }\n  }\n};","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/tableData.js"],"names":["React","FetchBody","tableHeader","props","headerLabelColor","headerLabelBackgroundColor","o","Object","keys","map","key","index","replace","color","backgroundColor","toUpperCase","tableRow","props2","items","item2","row","tableFooter","p","colorObject","values","a","console","log","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,iBAAP;AACA,OAAO,iBAAP;AACA,eAAe;AAEXC,EAAAA,WAAW,EAAGC,KAAD,IAAW;AACpB,QAAIC,gBAAgB,GAAC;AACjB,SAAE,SADe;AAEjB,SAAE,SAFe;AAGjB,SAAE,SAHe;AAIjB,SAAE,SAJe;AAKjB,SAAE,SALe;AAMjB,SAAE,SANe;AAOjB,SAAE,SAPe;AAQjB,SAAE;AARe,KAArB;AAUA,QAAIC,0BAA0B,GAAG;AAC7B,SAAE,SAD2B;AAE7B,SAAE,SAF2B;AAG7B,SAAE,SAH2B;AAI7B,SAAE;AAJ2B,KAAjC;AAMA,QAAIC,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAK,CAAC,CAAD,CAAjB,CAAR;AACA,WAAOG,CAAC,CAACG,GAAF,CAAM,CAACC,GAAD,EAAKC,KAAL,KAAa;AACtBD,MAAAA,GAAG,CAACE,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;;AACC,UAAGF,GAAG,IAAI,MAAP,IAAiBA,GAAG,IAAI,UAAxB,IAAsCA,GAAG,IAAI,aAA7C,IAA8DA,GAAG,IAAI,QAArE,IAAiFA,GAAG,IAAG,UAAvF,IAAqGA,GAAG,IAAG,MAA9G,EAAsH;AACnHA,QAAAA,GAAG,CAACE,OAAJ,CAAY,IAAZ,EAAkB,GAAlB;AACA,eAAO;AAAI,UAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAe;AAAI,UAAA,KAAK,EAAC,WAAV;AAAsB,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,YAAIT,gBAAgB,CAACO,KAAD,CAApB,CAAN;AAAoCG,YAAAA,eAAe,YAAIT,0BAA0B,CAACM,KAAD,CAA9B;AAAnD,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2HD,GAAG,CAACK,WAAJ,EAA3H,CAAf,CAAP;AACF;;AACN,aAAO;AAAI,QAAA,GAAG,EAAEL,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeA,GAAG,CAACK,WAAJ,EAAf,CAAP;AACS,KAPF,CAAP;AAQH,GA5BU;AA8BXC,EAAAA,QAAQ,EAAE,CAACb,KAAD,EAAOc,MAAP,KAAiB;AAEvB,QAAIC,KAAK,GAAGf,KAAZ;AACA,QAAIgB,KAAK,GAAGF,MAAZ;AACA,QAAIT,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYL,KAAK,CAAC,CAAD,CAAjB,CAAX;;AACA,QAAGgB,KAAH,EAAS;AACL,aAAOD,KAAK,CAACT,GAAN,CAAU,CAACW,GAAD,EAAMT,KAAN,KAAc;AAC/B,eAAO;AAAI,UAAA,KAAK,EAAC,SAAV;AAAoB,UAAA,GAAG,EAAEA,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgC,oBAAC,SAAD,CAAW,iBAAX;AAA6B,UAAA,GAAG,EAAEA,KAAlC;AAAyC,UAAA,IAAI,EAAES,GAA/C;AAAoD,UAAA,IAAI,EAAEZ,IAA1D;AAAgE,UAAA,IAAI,EAAEW,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhC,CAAP;AACC,OAFM,CAAP;AAGH;;AACD,WAAOD,KAAK,CAACT,GAAN,CAAU,CAACW,GAAD,EAAMT,KAAN,KAAc;AAC/B,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,oBAAC,SAAD,CAAW,SAAX;AAAqB,QAAA,GAAG,EAAEA,KAA1B;AAAiC,QAAA,IAAI,EAAES,GAAvC;AAA4C,QAAA,IAAI,EAAEZ,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAP;AACC,KAFM,CAAP;AAGH,GA3CU;AA6CXa,EAAAA,WAAW,EAAE,CAAClB,KAAD,EAAOmB,CAAP,KAAY;AACrB,QAAIC,WAAW,GAAC;AACZ,SAAE,SADU;AAEZ,SAAE,SAFU;AAGZ,SAAE,SAHU;AAIZ,SAAE,SAJU;AAKZ,SAAE;AALU,KAAhB;AAOA,QAAIjB,CAAC,GAAGC,MAAM,CAACiB,MAAP,CAAcrB,KAAd,CAAR;AACA,QAAIsB,CAAC,GAAGlB,MAAM,CAACC,IAAP,CAAYL,KAAZ,CAAR;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBxB,KAAvB;;AACA,QAAGmB,CAAH,EAAK;AACD,UAAIT,KAAJ;AACH,aAAOP,CAAC,CAACG,GAAF,CAAM,CAACC,GAAD,EAAKC,KAAL,KAEb;AAAI,QAAA,KAAK,EAAC,SAAV;AAAoB,QAAA,GAAG,EAAED,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,GAAJ,CAA9B,UACO;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,KAAK,EAAC,QAAX;AAAoB,QAAA,KAAK,EAAE;AAACkB,UAAAA,KAAK,EAAC,MAAI,IAAX;AAAgBd,UAAAA,eAAe,YAAIS,WAAW,CAACZ,KAAD,CAAf;AAA/B,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,SADP,EAGa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHb,CAFO,CAAP;AAOA,KATD,MAWI;AACA,aAAOL,CAAC,CAACG,GAAF,CAAOC,GAAD,IACb;AAAI,QAAA,KAAK,EAAC,SAAV;AAAoB,QAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,GAAJ,CAA9B,CADO,CAAP;AAEH;AACJ;AAvEU,CAAf","sourcesContent":["import React from 'react';\nimport FetchBody from './fetchBody';\nimport './tableData.css';\nimport './tableEdit.css';\nexport default {\n\n    tableHeader: (props) => {\n        let headerLabelColor={\n            0:\"#7a864a\",\n            1:\"#42526e\",\n            2:\"#42526e\",\n            3:\"#0747a6\",\n            4:\"#0747a6\",\n            5:\"#006644\",\n            6:\"#006644\",\n            7:\"#0052cc\"\n        }\n        let headerLabelBackgroundColor = {\n            5:\"#e3fcef\",\n            6:\"#e3fcef\",\n            3:\"#deebff\",\n            4:\"#deebff\"\n        }\n        let o = Object.keys(props[0]);\n        return o.map((key,index)=>{\n            key.replace(/_/g, ' ');\n             if(key == \"open\" || key == \"accepted\" || key == \"in_Progress\" || key == \"review\" || key ==\"resolved\" || key ==\"done\" ){\n                key.replace(/_/g, ' ');\n                return <th key={key} ><td class=\"headerBox\" style={{color:`${headerLabelColor[index]}`,backgroundColor:`${headerLabelBackgroundColor[index]}`}}>{key.toUpperCase()}</td></th>\n             }\n        return <th key={key}>{key.toUpperCase()}</th>\n                })\n    },\n    \n    tableRow: (props,props2) =>{\n                  \n        let items = props;\n        let item2 = props2;\n        let keys = Object.keys(props[0]);\n        if(item2){\n            return items.map((row, index)=>{\n            return <tr class=\"editRow\" key={index}><FetchBody.RenderProgressRow key={index} data={row} keys={keys} item={item2} /></tr>\n            })\n        }\n        return items.map((row, index)=>{\n        return <tr key={index}><FetchBody.RenderRow key={index} data={row} keys={keys} /></tr>\n        })\n    },\n\n    tableFooter: (props,p) =>{\n        let colorObject={\n            0:'#42526e',\n            1:'#42526e',\n            2:'#654982',\n            3:\"#f15c75\",\n            4:\"#14892c\"\n        }\n        let o = Object.values(props);\n        let a = Object.keys(props);\n        console.log(\"footer :\",props);\n        if(p){\n            let color;\n         return o.map((key,index)=>(\n                   \n         <td class=\"editRow\" key={key}><b>{key}</b>&nbsp;\n                <div class=\"progress\">\n                <div class=\"inside\" style={{width:100+'px',backgroundColor:`${colorObject[index]}`}} >_</div>&nbsp;\n                </div><b>100%</b>\n        </td>))\n        }\n\n        else{\n            return o.map((key)=>(\n            <td class=\"editRow\" key={key}><b>{key}</b></td>))\n        }\n    }\n }\n"]},"metadata":{},"sourceType":"module"}