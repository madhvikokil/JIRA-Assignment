{"ast":null,"code":"\"use strict\";\n\nmodule.exports = SettingsClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/settings'\r\n * @param {JiraClient} jiraClient\r\n * @constructor SettingsClient\r\n */\n\nfunction SettingsClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Sets the base URL that is configured for this JIRA instance.\r\n   *\r\n   * @method setBaseUrl\r\n   * @memberOf SettingsClient#\r\n   * @param opts The request options sent to the Jira API.\r\n   * @param opts.newUrl The new base url.\r\n   * @param [callback] Called when the base url has been set.\r\n   * @return {Promise} Resolved when the base url has been set.\r\n   */\n\n  this.setBaseUrl = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/settings/baseUrl'),\n      method: 'PUT',\n      json: true,\n      followAllRedirects: true,\n      body: opts.newUrl\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n  /**\r\n   * Returns the default system columns for issue navigator. Admin permission will be required.\r\n   *\r\n   * @method getIssueNavColumns\r\n   * @memberOf SettingsClient#\r\n   * @param opts Ignored\r\n   * @param [callback] Called when the columns have been retrieved\r\n   * @return {Promise} Resolved when the columns have been retrieved\r\n   */\n\n\n  this.getIssueNavColumns = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/settings/columns'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}