{"ast":null,"code":"\"use strict\";\n\nvar errorStrings = require('./../lib/error');\n\nmodule.exports = AuditingClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/auditing'\r\n * @param {JiraClient} jiraClient\r\n * @constructor AuditingClient\r\n */\n\nfunction AuditingClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Returns auditing records filtered using provided parameters\r\n   *\r\n   * @method getAudits\r\n   * @memberOf AuditingClient#\r\n   * @param opts The filtering options for retrieving audits.\r\n   * @param [opts.offset] The number of record from which search starts\r\n   * @param [opts.limit] Maximum number of returned results (if is limit is <= 0 or > 1000, it will be set do default\r\n   *     value: 1000)\r\n   * @param [opts.filter] Text query; each record that will be returned must contain the provided text in one of its\r\n   *     fields\r\n   * @param [opts.from] Timestamp in past; 'from' must be less or equal 'to', otherwise the result set will be empty\r\n   *     only records that where created in the same moment or after the 'from' timestamp will be provided in\r\n   *     response\r\n   * @param [opts.to] Timestamp in past; 'from' must be less or equal 'to', otherwise the result set will be empty\r\n   *     only records that where created in the same moment or earlier than the 'to' timestamp will be provided in\r\n   *     response\r\n   * @param [callback] Called when the audits are retrieved.\r\n   * @return {Promise} Resolved when the audits are retrieved.\r\n   */\n\n  this.getAudits = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/auditing/record'),\n      json: true,\n      followAllRedirects: true,\n      method: 'GET',\n      qs: {\n        offset: opts.offset,\n        limit: opts.limit,\n        filter: opts.filter,\n        from: opts.from,\n        to: opts.to\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n  /**\r\n   *\r\n   * @method createAudit\r\n   * @memberOf AuditingClient#\r\n   * @param opts The request options.\r\n   * @param opts.audit See {@link https://docs.atlassian.com/jira/REST/latest/#d2e2557}\r\n   * @param [callback] Called when the audit is created.\r\n   * @return {Promise} Resolved when the audit is created.\r\n   */\n\n\n  this.createAudit = function (opts, callback) {\n    if (!opts.audit) {\n      throw new Error(errorStrings.NO_AUDIT_ERROR);\n    }\n\n    var options = {\n      uri: this.jiraClient.buildURL('/auditing/record'),\n      json: true,\n      followAllRedirects: true,\n      method: 'POST',\n      body: opts.audit\n    };\n    return this.jiraClient.makeRequest(options, callback, 'Audit Record Added');\n  };\n}","map":null,"metadata":{},"sourceType":"script"}