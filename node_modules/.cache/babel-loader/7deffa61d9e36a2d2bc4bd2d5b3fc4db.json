{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/Charts/component/chart2.js\";\nimport React from 'react'; // import BarChart from '@bit/recharts.recharts.bar-chart';\n// import Bar from '@bit/recharts.recharts.bar';\n// import XAxis from '@bit/recharts.recharts.x-axis';\n// import YAxis from '@bit/recharts.recharts.y-axis';\n// import CartesianGrid from '@bit/recharts.recharts.cartesian-griyd';\n// import Tooltip from '@bit/recharts.recharts.tooltip';\n// import Legend from '@bit/recharts.recharts.legend';\n\nimport '../../Assets/recharts.css';\nimport { BarChart, XAxis, YAxis, CartesianGrid, Tooltip, Bar, Legend } from 'recharts';\n\nclass Chart2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"this.state.array : \", this.props.data);\n    const name = {\n      0: \"open\",\n      1: \"acc\",\n      2: \"inprog\",\n      3: \"review\",\n      4: \"resolve\",\n      5: \"done\",\n      6: \"sp\"\n    };\n    console.log(\"keys : \", Object.values(this.props.data));\n    let s = Object.keys(this.props.data);\n\n    for (let i = 0; i < s.length; i++) {\n      this.setState({\n        array: s.map(key => {\n          return {\n            value: this.props.data[key],\n            name: name[key]\n          };\n        })\n      });\n      console.log(\"index : \", i, \" \", this.state.array);\n    }\n\n    console.log(\"new state : \", this.state.array);\n  }\n\n  render() {\n    console.log(\"this.state : \", this.state);\n    return React.createElement(BarChart, {\n      width: 500,\n      height: 300,\n      data: this.state.array,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      dataKey: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"value\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart2;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/Charts/component/chart2.js"],"names":["React","BarChart","XAxis","YAxis","CartesianGrid","Tooltip","Bar","Legend","Chart2","Component","constructor","props","state","array","componentDidMount","console","log","data","name","Object","values","s","keys","i","length","setState","map","key","value","render","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,2BAAP;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,aAAjC,EAAgDC,OAAhD,EAAyDC,GAAzD,EAA6DC,MAA7D,QAA2E,UAA3E;;AACC,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAoC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAC;AADG,KAAb;AAGH;;AAEJC,EAAAA,iBAAiB,GAAE;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkC,KAAKL,KAAL,CAAWM,IAA7C;AAEA,UAAMC,IAAI,GAAE;AACZ,SAAE,MADU;AAEZ,SAAE,KAFU;AAGZ,SAAE,QAHU;AAIZ,SAAE,QAJU;AAKZ,SAAE,SALU;AAMZ,SAAE,MANU;AAOZ,SAAE;AAPU,KAAZ;AASAH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBG,MAAM,CAACC,MAAP,CAAc,KAAKT,KAAL,CAAWM,IAAzB,CAAtB;AACT,QAAII,CAAC,GAAGF,MAAM,CAACG,IAAP,CAAY,KAAKX,KAAL,CAAWM,IAAvB,CAAR;;AACA,SAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,CAAC,CAACG,MAAhB,EAAuBD,CAAC,EAAxB,EAA2B;AAE1B,WAAKE,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAAGQ,CAAC,CAACK,GAAF,CAAOC,GAAD,IAAS;AAAE,iBAAO;AAAEC,YAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWM,IAAX,CAAgBU,GAAhB,CAAT;AAA8BT,YAAAA,IAAI,EAACA,IAAI,CAACS,GAAD;AAAvC,WAAP;AAAsD,SAAvE;AAAT,OAAd;AACCZ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBO,CAAvB,EAAyB,GAAzB,EAA6B,KAAKX,KAAL,CAAWC,KAAxC;AAED;;AAEDE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAKJ,KAAL,CAAWC,KAAtC;AAEM;;AAEJgB,EAAAA,MAAM,GAAE;AACLd,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4B,KAAKJ,KAAjC;AACC,WAEG,oBAAC,QAAD;AACV,MAAA,KAAK,EAAE,GADG;AAEV,MAAA,MAAM,EAAE,GAFE;AAGV,MAAA,IAAI,EAAE,KAAKA,KAAL,CAAWC,KAHP;AAIV,MAAA,MAAM,EAAE;AACPiB,QAAAA,GAAG,EAAE,CADE;AACCC,QAAAA,KAAK,EAAE,EADR;AACYC,QAAAA,IAAI,EAAE,EADlB;AACsBC,QAAAA,MAAM,EAAE;AAD9B,OAJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASV,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATU,EAUV,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVU,EAYV,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZU,EAcV,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdU,CAFH;AAmBH;;AAvD+B;;AA2DrC,eAAezB,MAAf","sourcesContent":["import React from 'react';\n// import BarChart from '@bit/recharts.recharts.bar-chart';\n// import Bar from '@bit/recharts.recharts.bar';\n// import XAxis from '@bit/recharts.recharts.x-axis';\n// import YAxis from '@bit/recharts.recharts.y-axis';\n// import CartesianGrid from '@bit/recharts.recharts.cartesian-griyd';\n// import Tooltip from '@bit/recharts.recharts.tooltip';\n// import Legend from '@bit/recharts.recharts.legend';\nimport '../../Assets/recharts.css';\nimport { BarChart, XAxis, YAxis, CartesianGrid, Tooltip, Bar,Legend } from 'recharts';\n class Chart2 extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            array:[]\n        }\n    }\n\n\tcomponentDidMount(){\n            console.log(\"this.state.array : \",this.props.data);\n            \n            const name ={\n            0:\"open\",\n            1:\"acc\",\n            2:\"inprog\",\n            3:\"review\",\n            4:\"resolve\",\n            5:\"done\",\n            6:\"sp\"     \n            }\n            console.log(\"keys : \",Object.values(this.props.data));\n\t\t\tlet s = Object.keys(this.props.data);\n\t\t\tfor(let i=0;i<s.length;i++){\n\t\t\t\t\n\t\t\t\tthis.setState({array : s.map((key) => { return { value :this.props.data[key],name:name[key] }})});\n\t\t\t\t\tconsole.log(\"index : \",i,\" \",this.state.array);\n\t\t\t\n\t\t\t}\n\n\t\t\tconsole.log(\"new state : \",this.state.array);\n\t\t\t\n        }\n\t\n     render(){\n        console.log(\"this.state : \",this.state);\n         return(\n             \n            <BarChart\n\t\twidth={500}\n\t\theight={300}\n\t\tdata={this.state.array}\n\t\tmargin={{\n\t\t\ttop: 5, right: 30, left: 20, bottom: 5,\n\t\t}}\n\t>\n\t\t{/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n\t\t<XAxis dataKey=\"value\" />\n\t\t<YAxis />\n\t\t{/* <Tooltip /> */}\n\t\t<Legend />\n\t\t\n\t\t<Bar dataKey=\"value\" fill=\"#82ca9d\" />\n\t</BarChart>\n         )  \n     }\n }\n\n\nexport default Chart2;"]},"metadata":{},"sourceType":"module"}