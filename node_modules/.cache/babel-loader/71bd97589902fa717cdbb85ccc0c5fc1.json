{"ast":null,"code":"\"use strict\";\n\nmodule.exports = PasswordClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/password'\r\n *\r\n * @param {JiraClient} jiraClient\r\n * @constructor PasswordClient\r\n */\n\nfunction PasswordClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Returns user-friendly statements governing the system's password policy.\r\n   *\r\n   * @method getPasswordPolicy\r\n   * @memberOf PasswordClient#\r\n   * @param opts The request options to send to the Jira API\r\n   * @param {boolean} [opts.hasOldPassword=false] Whether or not the user will be required to enter their current\r\n   *     password. Use false (the default) if this is a new user or if an administrator is forcibly changing another\r\n   *     user's password.\r\n   * @param [callback] Called when the password policy has been retrieved.\r\n   * @return {Promise} Resolved when the password policy has been retrieved.\r\n   */\n\n  this.getPasswordPolicy = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/password/policy'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true,\n      qs: {\n        hasOldPassword: opts.hasOldPassword\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}