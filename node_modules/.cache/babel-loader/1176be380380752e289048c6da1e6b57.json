{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/tableData.js\";\nimport React from 'react';\nimport FetchBody from './fetchBody';\nimport './tableData.css';\nexport default {\n  tableHeader: props => {\n    let o = Object.keys(props[0]);\n    return o.map(key => {\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  },\n  tableRow: (props, props2) => {\n    let items = props;\n    let item2 = props2;\n    let keys = Object.keys(props[0]);\n\n    if (item2) {\n      return items.map((row, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(FetchBody.RenderProgressRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return items.map((row, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(FetchBody.RenderRow, {\n        key: index,\n        data: row,\n        keys: keys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    });\n  },\n  tableFooter: props => {\n    let o = Object.values(props);\n    return o.map(key => React.createElement(\"td\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, key, React.createElement(\"div\", {\n      class: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"inside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))));\n  }\n};","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/tableData.js"],"names":["React","FetchBody","tableHeader","props","o","Object","keys","map","key","toUpperCase","tableRow","props2","items","item2","row","index","tableFooter","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,iBAAP;AACA,eAAe;AAEXC,EAAAA,WAAW,EAAGC,KAAD,IAAW;AACpB,QAAIC,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAAC,CAAD,CAAjB,CAAR;AACA,WAAOC,CAAC,CAACG,GAAF,CAAOC,GAAD,IAAO;AACZ,aAAO;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeA,GAAG,CAACC,WAAJ,EAAf,CAAP;AACC,KAFF,CAAP;AAGH,GAPU;AASXC,EAAAA,QAAQ,EAAE,CAACP,KAAD,EAAOQ,MAAP,KAAiB;AAEvB,QAAIC,KAAK,GAAGT,KAAZ;AACA,QAAIU,KAAK,GAAGF,MAAZ;AACA,QAAIL,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYH,KAAK,CAAC,CAAD,CAAjB,CAAX;;AACA,QAAGU,KAAH,EAAS;AACL,aAAOD,KAAK,CAACL,GAAN,CAAU,CAACO,GAAD,EAAMC,KAAN,KAAc;AAC/B,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgB,oBAAC,SAAD,CAAW,iBAAX;AAA6B,UAAA,GAAG,EAAEA,KAAlC;AAAyC,UAAA,IAAI,EAAED,GAA/C;AAAoD,UAAA,IAAI,EAAER,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,CAAP;AACC,OAFM,CAAP;AAGH;;AACD,WAAOM,KAAK,CAACL,GAAN,CAAU,CAACO,GAAD,EAAMC,KAAN,KAAc;AAC/B,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,oBAAC,SAAD,CAAW,SAAX;AAAqB,QAAA,GAAG,EAAEA,KAA1B;AAAiC,QAAA,IAAI,EAAED,GAAvC;AAA4C,QAAA,IAAI,EAAER,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAP;AACC,KAFM,CAAP;AAKH,GAxBU;AA0BXU,EAAAA,WAAW,EAAGb,KAAD,IAAU;AAEnB,QAAIC,CAAC,GAAGC,MAAM,CAACY,MAAP,CAAcd,KAAd,CAAR;AACA,WAAOC,CAAC,CAACG,GAAF,CAAOC,GAAD,IACb;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeA,GAAf,EACQ;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADR,CADO,CAAP;AAUH;AAvCU,CAAf","sourcesContent":["import React from 'react';\nimport FetchBody from './fetchBody';\nimport './tableData.css';\nexport default {\n\n    tableHeader: (props) => {\n        let o = Object.keys(props[0]);\n        return o.map((key)=>{\n                return <th key={key}>{key.toUpperCase()}</th>\n                })\n    },\n    \n    tableRow: (props,props2) =>{\n                  \n        let items = props;\n        let item2 = props2;\n        let keys = Object.keys(props[0]);\n        if(item2){\n            return items.map((row, index)=>{\n            return <tr key={index}><FetchBody.RenderProgressRow key={index} data={row} keys={keys}/></tr>\n            })\n        }\n        return items.map((row, index)=>{\n        return <tr key={index}><FetchBody.RenderRow key={index} data={row} keys={keys}/></tr>\n        })\n\n       \n    },\n\n    tableFooter: (props) =>{\n\n        let o = Object.values(props);\n        return o.map((key)=>(\n        <td key={key}>{key}\n                <div class=\"progress\">\n                    <div class=\"inside\"></div>\n                {/* <div class=\"progress-bar\" role=\"progressbar\" style={{width: 50+'%'}} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div> */}\n                    \n                </div>\n                   \n        </td>\n                ))\n    }\n }\n"]},"metadata":{},"sourceType":"module"}