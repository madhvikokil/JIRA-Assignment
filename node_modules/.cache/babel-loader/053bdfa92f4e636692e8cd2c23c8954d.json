{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchBody.js\";\nimport React from 'react';\nimport ProgressBar from './progressBar';\nimport './tableEdit.css';\nexport default {\n  RenderRow: props => {\n    return props.keys.map((key, index) => {\n      return React.createElement(\"td\", {\n        class: \"editRow headerBox\",\n        key: props.data[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, props.data[key]);\n    });\n  },\n  Design: props => {},\n  RenderProgressRow: props => {\n    return props.keys.map((key, index) => {\n      if (typeof props.data[key] == 'string') {\n        return React.createElement(\"td\", {\n          key: props.data[key],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, props.data[key]);\n      }\n\n      if (typeof props.data[key] != 'string') {\n        if (key == 'issue_count') {\n          let bar = props.data[key] * 100 / props.item.issueCountSum;\n          bar = Math.floor(bar);\n          return React.createElement(ProgressBar.displayProgressBar, {\n            aValue: props.data[key],\n            bar: bar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          });\n        }\n\n        if (key == 'story_Point') {\n          let bar = props.data[key] * 100 / props.item.storyPointSum;\n          bar = Math.floor(bar);\n          return React.createElement(ProgressBar.displayProgressBar, {\n            aValue: props.data[key],\n            bar: bar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          });\n        }\n\n        if (key == 'Original_Estimate_in_days') {\n          let bar = props.data[key] * 100 / props.item.originalSum;\n          bar = Math.floor(bar);\n          return React.createElement(ProgressBar.displayProgressBar, {\n            aValue: props.data[key],\n            bar: bar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          });\n        }\n\n        if (key == 'remaining_Estimate_in_days') {\n          let bar = props.data[key] * 100 / props.item.remainingSum;\n          bar = Math.floor(bar);\n          return React.createElement(ProgressBar.displayProgressBar, {\n            aValue: props.data[key],\n            bar: bar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          });\n        }\n\n        if (key == 'time_Spent_in_days') {\n          let bar = props.data[key] * 100 / props.item.spentSum;\n          bar = Math.floor(bar);\n          return React.createElement(ProgressBar.displayProgressBar, {\n            aValue: props.data[key],\n            bar: bar,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          });\n        }\n      }\n    });\n  },\n\n  hello() {}\n\n};","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchBody.js"],"names":["React","ProgressBar","RenderRow","props","keys","map","key","index","data","Design","RenderProgressRow","bar","item","issueCountSum","Math","floor","storyPointSum","originalSum","remainingSum","spentSum","hello"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProgressBar from './progressBar';\nimport './tableEdit.css';\n\nexport default{\n    RenderRow:(props)=>{\n        return props.keys.map((key, index)=>{\n        return <td class=\"editRow headerBox\" key={props.data[key]}>{props.data[key]}</td>\n        })\n       },\n\n    Design:(props)=>{\n\n    },\n\n    RenderProgressRow:(props) =>{\n        return props.keys.map((key, index)=>{\n            if(typeof props.data[key] == 'string'){\n                return <td  key={props.data[key]}>{props.data[key]}</td>\n            }\n            if(typeof props.data[key] != 'string'){\n                if(key == 'issue_count') {\n                    let bar = props.data[key] * 100 / props.item.issueCountSum;\n                    bar = Math.floor(bar);\n                   return  <ProgressBar.displayProgressBar aValue={props.data[key]} bar={bar}/>\n            \n                }\n                if(key == 'story_Point') {\n                        let bar = props.data[key] * 100 / props.item.storyPointSum;\n                        bar = Math.floor(bar);\n                        \n                        return  <ProgressBar.displayProgressBar aValue={props.data[key]} bar={bar}/>\n                    }\n\n                    if(key == 'Original_Estimate_in_days') {\n                        let bar = props.data[key] * 100 / props.item.originalSum;\n                        bar = Math.floor(bar)\n                        return  <ProgressBar.displayProgressBar aValue={props.data[key]} bar={bar}/>\n                    }\n\n                    if(key == 'remaining_Estimate_in_days') {\n                        let bar = props.data[key] * 100 / props.item.remainingSum;\n                        bar = Math.floor(bar)\n                        return  <ProgressBar.displayProgressBar aValue={props.data[key]} bar={bar}/>\n                    }\n                    \n                    if(key == 'time_Spent_in_days') {\n                        let bar = props.data[key] * 100 / props.item.spentSum;\n                        bar = Math.floor(bar)\n                        return  <ProgressBar.displayProgressBar aValue={props.data[key]} bar={bar}/>\n                    }\n                \n                \n            }\n           \n            \n            })\n           },\n\n           hello(){\n\n           }\n    }\n"]},"metadata":{},"sourceType":"module"}