{"ast":null,"code":"\"use strict\";\n\nmodule.exports = ReindexClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/reindex'\r\n *\r\n * @param {JiraClient} jiraClient\r\n * @constructor ReindexClient\r\n */\n\nfunction ReindexClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Kicks off a reindex. Need Admin permissions to perform this reindex.\r\n   *\r\n   * @method doReindex\r\n   * @memberOf ReindexClient#\r\n   * @param opts The request options sent to the Jira API.\r\n   * @param {string} [opts.type] Case insensitive String indicating type of reindex. If omitted, then defaults to\r\n   *     BACKGROUND_PREFERRED\r\n   * @param {boolean} [opts.indexComments=false] Indicates that comments should also be reindexed. Not relevant for\r\n   *     foreground reindex, where comments are always reindexed.\r\n   * @param {boolean} [opts.indexChangeHistory=false] Indicates that changeHistory should also be reindexed. Not\r\n   *     relevant for foreground reindex, where changeHistory is always reindexed.\r\n   * @param [callback] Called when the reindex has been started.\r\n   * @return {Promise} Resolved when the reindex has been started.\r\n   */\n\n  this.doReindex = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/reindex'),\n      method: 'POST',\n      json: true,\n      followAllRedirects: true,\n      qs: {\n        type: opts.type,\n        indexComments: opts.indexComments,\n        indexChangeHistory: opts.indexChangeHistory\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n  /**\r\n   * Gets information on the system reindexes. If a reindex is currently taking place then information about this\r\n   * reindex is returned. If there is no active index task, then returns information about the latest reindex task\r\n   * run, otherwise returns a 404 indicating that no reindex has taken place.\r\n   *\r\n   * @method getReindex\r\n   * @memberOf ReindexClient#\r\n   * @param opts The request options sent to the Jira API.\r\n   * @param [opts.taskId] The id of an indexing task you wish to obtain details on. If omitted, then defaults to the\r\n   *     standard behaviour and returns information on the active reindex task, or the last task to run if no reindex\r\n   *     is taking place. . If there is no reindexing task with that id then a 404 is returned.\r\n   * @param [callback] Called when the reindex data has been retrieved.\r\n   * @return {Promise} Resolved when the reindex data has been retrieved.\r\n   */\n\n\n  this.getReindex = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/reindex'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true,\n      qs: {\n        taskId: opts.taskId\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}