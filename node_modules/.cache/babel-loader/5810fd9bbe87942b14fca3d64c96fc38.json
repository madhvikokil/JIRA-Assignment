{"ast":null,"code":"\"use strict\";\n\nmodule.exports = LicenseRoleClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/licenserole'\r\n * @param {JiraClient} jiraClient\r\n * @constructor LicenseRoleClient\r\n */\n\nfunction LicenseRoleClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Returns all license roles in the system.\r\n   *\r\n   * @method getAllLicenseRoles\r\n   * @memberOf LicenseRoleClient#\r\n   * @param opts Ignored\r\n   * @param [callback] Called when the license roles have been retrieved.\r\n   * @return {Promise} Resolved when the license roles have been retrieved.\r\n   */\n\n  this.getAllLicenseRoles = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/licenserole'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n  /**\r\n   * Gets the passed license role if it exists.\r\n   *\r\n   * @method getLicenseRole\r\n   * @memberOf LicenseRoleClient#\r\n   * @param opts The request options sent to the Jira API.\r\n   * @param opts.roleId The id of the license role to retrieve.\r\n   * @param [callback] Called when the license role is retrieved.\r\n   * @return {Promise} Resolved when the license role is retrieved.\r\n   */\n\n\n  this.getLicenseRole = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/licenserole/' + opts.roleId),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n  /**\r\n   * Updates the license role with the passed data. Only the groups of the role may be updated. Requests to change\r\n   * the id or the name of the role will be silently ignored.\r\n   *\r\n   * @method editLicenseRole\r\n   * @memberOf LicenseRoleClient#\r\n   * @param opts The request options sent to the Jira API.\r\n   * @param opts.roleId The id of the license role to retrieve.\r\n   * @param opts.role The new data to place in the role.  See\r\n   *  {@link https://docs.atlassian.com/jira/REST/latest/#d2e365}\r\n   * @param [callback] Called when the license role is edited.\r\n   * @return {Promise} Resolved when the license role is edited.\r\n   */\n\n\n  this.editLicenseRole = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/licenserole/' + opts.roleId),\n      method: 'PUT',\n      json: true,\n      followAllRedirects: true,\n      body: opts.role\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}