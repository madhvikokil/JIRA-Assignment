{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchBody.js\";\nimport React from 'react';\nexport default {\n  RenderRow: props => {\n    return props.keys.map((key, index) => {\n      return React.createElement(\"td\", {\n        key: props.data[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5\n        },\n        __self: this\n      }, props.data[key]));\n    });\n  },\n  RenderProgressRow: props => {\n    return props.keys.map((key, index) => {\n      if (typeof props.data[key] == 'string') {\n        return React.createElement(\"td\", {\n          key: props.data[key],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, props.data[key]));\n      }\n\n      if (typeof props.data[key] != 'string') {\n        if (key == 'issue_count') {\n          let bar = props.data[key] * 100 / props.item.issueCountSum;\n          bar = bar.toFixed(2);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, props.data[key]), React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20\n            },\n            __self: this\n          }, \"p\")), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }));\n        }\n\n        if (key == 'story_Point') {\n          let bar = props.data[key] * 100 / props.item.storyPointSum;\n          bar = bar.toFixed(2);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, props.data[key]), React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, \"p\")), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }));\n        }\n\n        if (key == 'Original_Estimate') {\n          let bar = props.data[key] * 100 / props.item.originalSum;\n          bar = bar.toFixed(2);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, props.data[key]), React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, \"p\")), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }));\n        }\n\n        if (key == 'remaining_Estimate') {\n          let bar = props.data[key] * 100 / props.item.remainingSum;\n          bar = bar.toFixed(2);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, props.data[key]), React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"p\")), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }));\n        }\n\n        if (key == 'time_Spent') {\n          let bar = props.data[key] * 100 / props.item.spentSum;\n          bar = bar.toFixed(2);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, props.data[key]), React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          })), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, bar));\n        }\n      } // if(typeof props.data[key] != 'string'){\n      //     if(key == 'story_point') {\n      //         let bar = props.data[key] * 100 / props.item.storyPointSum;\n      //         bar = bar.toFixed(2);\n      //         return <td key={props.data[key]}><b>{props.data[key]}</b>\n      //  <div class=\"progress\">\n      //         <div class=\"inside\" style={{width:`${bar}`+'px'}}>p</div>                  \n      //          </div><b></b>\n      //        </td>\n      //     }\n      // }\n      // if(typeof props.data[key] != 'string'){\n      //     if(key == 'story_point') {\n      //         let bar = props.data[key] * 100 / props.item.storyPointSum;\n      //         bar = bar.toFixed(2);\n      //         return <td key={props.data[key]}><b>{props.data[key]}</b>\n      //  <div class=\"progress\">\n      //         <div class=\"inside\" style={{width:`${bar}`+'px'}}>p</div>                  \n      //          </div><b></b>\n      //        </td>\n      //     }\n      // }\n\n    });\n  }\n};\n{\n  /* <td key={key}><b>{key}</b>\n                 <div class=\"progress\">\n                     <div class=\"inside\"><span style={{display:'inline', width:30+'px' }}></span></div>                  \n                 </div><b>100%</b>\n                    \n         </td> */\n}\n{\n  /* <th key={key}>{key.toUpperCase()}</th> */\n}","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchBody.js"],"names":["React","RenderRow","props","keys","map","key","index","data","RenderProgressRow","bar","item","issueCountSum","toFixed","width","storyPointSum","originalSum","remainingSum","spentSum"],"mappings":"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","sourcesContent":["import React from 'react';\nexport default{\n    RenderRow:(props)=>{\n        return props.keys.map((key, index)=>{\n        return <td key={props.data[key]}><b>{props.data[key]}</b></td>\n        })\n       },\n\n    RenderProgressRow:(props) =>{\n        return props.keys.map((key, index)=>{\n            if(typeof props.data[key] == 'string'){\n                return <td key={props.data[key]}><b>{props.data[key]}</b></td>\n            }\n            if(typeof props.data[key] != 'string'){\n                if(key == 'issue_count') {\n                    let bar = props.data[key] * 100 / props.item.issueCountSum;\n                    bar = bar.toFixed(2);\n                    return (<td key={props.data[key]}><b>{props.data[key]}</b>\n             <div class=\"progress\">\n                    <div class=\"inside\" style={{width:`${bar}`+'px'}}>p</div>                  \n                     </div><b></b>\n                   </td>)\n                }\n\n                \n                    if(key == 'story_Point') {\n                        let bar = props.data[key] * 100 / props.item.storyPointSum;\n                        bar = bar.toFixed(2);\n                        return (<td key={props.data[key]}><b>{props.data[key]}</b>\n                 <div class=\"progress\">\n                        <div class=\"inside\" style={{width:`${bar}`+'px'}}>p</div>                  \n                         </div><b></b>\n                       </td>)\n                    }\n\n                    if(key == 'Original_Estimate') {\n                        let bar = props.data[key] * 100 / props.item.originalSum;\n                        bar = bar.toFixed(2);\n                        return (<td key={props.data[key]}><b>{props.data[key]}</b>\n                 <div class=\"progress\">\n                        <div class=\"inside\" style={{width:`${bar}`+'px'}}>p</div>                  \n                         </div><b></b>\n                       </td>)\n                    }\n\n                    if(key == 'remaining_Estimate') {\n                        let bar = props.data[key] * 100 / props.item.remainingSum;\n                        bar = bar.toFixed(2);\n                        return (<td key={props.data[key]}><b>{props.data[key]}</b>\n                 <div class=\"progress\">\n                        <div class=\"inside\" style={{width:`${bar}`+'px'}}>p</div>                  \n                         </div><b></b>\n                       </td>)\n                    }\n                    \n                    if(key == 'time_Spent') {\n                        let bar = props.data[key] * 100 / props.item.spentSum;\n                        bar = bar.toFixed(2);\n                        return (<td key={props.data[key]}><b>{props.data[key]}</b>\n                 <div class=\"progress\">\n                    <div class=\"inside\" style={{width:`${bar}`+'px'}}></div>                  \n                         </div><b>{bar}</b>\n                       </td>)\n                    }\n                \n                \n            }\n           \n\n            // if(typeof props.data[key] != 'string'){\n            //     if(key == 'story_point') {\n            //         let bar = props.data[key] * 100 / props.item.storyPointSum;\n            //         bar = bar.toFixed(2);\n            //         return <td key={props.data[key]}><b>{props.data[key]}</b>\n            //  <div class=\"progress\">\n            //         <div class=\"inside\" style={{width:`${bar}`+'px'}}>p</div>                  \n            //          </div><b></b>\n            //        </td>\n            //     }\n                \n            // }\n\n            // if(typeof props.data[key] != 'string'){\n            //     if(key == 'story_point') {\n            //         let bar = props.data[key] * 100 / props.item.storyPointSum;\n            //         bar = bar.toFixed(2);\n            //         return <td key={props.data[key]}><b>{props.data[key]}</b>\n            //  <div class=\"progress\">\n            //         <div class=\"inside\" style={{width:`${bar}`+'px'}}>p</div>                  \n            //          </div><b></b>\n            //        </td>\n            //     }\n                \n            // }\n\n\n\n            \n            })\n           }\n    }\n\n{/* <td key={key}><b>{key}</b>\n                <div class=\"progress\">\n                    <div class=\"inside\"><span style={{display:'inline', width:30+'px' }}></span></div>                  \n                </div><b>100%</b>\n                   \n        </td> */}\n\n\n{/* <th key={key}>{key.toUpperCase()}</th> */}"]},"metadata":{},"sourceType":"module"}