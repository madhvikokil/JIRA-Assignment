{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/chart.js\";\nimport React, { PureComponent } from 'react';\nimport { render } from 'react-dom';\nimport fp from 'lodash/fp';\nimport ReactD3PieChart from '../src';\n\nclass DemoApp extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = () => {\n      const lastData = fp.last(this.state.data);\n      const label = lastData.label;\n      const newLabel = String.fromCharCode(label.charCodeAt() + 1);\n      const newValue = Math.floor(Math.random() * 31);\n      this.setState({\n        data: [...this.state.data, {\n          label: newLabel,\n          value: newValue\n        }]\n      });\n    };\n\n    this.renderLabel = d => \"Label is \".concat(d.data.label);\n\n    this.state = {\n      data: [{\n        label: 'A',\n        value: 10\n      }, {\n        label: 'B',\n        value: 22\n      }, {\n        label: 'C',\n        value: 5\n      }, {\n        label: 'D',\n        value: 0\n      }, {\n        label: 'E',\n        value: 8\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(ReactD3PieChart, {\n      data: this.state.data,\n      tooltip: true,\n      renderLabel: this.renderLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Add Data\"));\n  }\n\n}","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/chart.js"],"names":["React","PureComponent","render","fp","ReactD3PieChart","DemoApp","constructor","props","handleClick","lastData","last","state","data","label","newLabel","String","fromCharCode","charCodeAt","newValue","Math","floor","random","setState","value","renderLabel","d"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,EAAP,MAAe,WAAf;AACA,OAAOC,eAAP,MAA4B,QAA5B;;AAEA,MAAMC,OAAN,SAAsBJ,aAAtB,CAAoC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,WAbmB,GAaL,MAAM;AAClB,YAAMC,QAAQ,GAAGN,EAAE,CAACO,IAAH,CAAQ,KAAKC,KAAL,CAAWC,IAAnB,CAAjB;AADkB,YAEVC,KAFU,GAEAJ,QAFA,CAEVI,KAFU;AAGlB,YAAMC,QAAQ,GAAGC,MAAM,CAACC,YAAP,CAAoBH,KAAK,CAACI,UAAN,KAAqB,CAAzC,CAAjB;AACA,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAjB;AAEA,WAAKC,QAAL,CAAc;AACZV,QAAAA,IAAI,EAAE,CACJ,GAAG,KAAKD,KAAL,CAAWC,IADV,EAEJ;AAAEC,UAAAA,KAAK,EAAEC,QAAT;AAAmBS,UAAAA,KAAK,EAAEL;AAA1B,SAFI;AADM,OAAd;AAMD,KAzBkB;;AAAA,SA2BnBM,WA3BmB,GA2BLC,CAAC,uBAAgBA,CAAC,CAACb,IAAF,CAAOC,KAAvB,CA3BI;;AAEjB,SAAKF,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcU,QAAAA,KAAK,EAAE;AAArB,OADI,EAEJ;AAAEV,QAAAA,KAAK,EAAE,GAAT;AAAcU,QAAAA,KAAK,EAAE;AAArB,OAFI,EAGJ;AAAEV,QAAAA,KAAK,EAAE,GAAT;AAAcU,QAAAA,KAAK,EAAE;AAArB,OAHI,EAIJ;AAAEV,QAAAA,KAAK,EAAE,GAAT;AAAcU,QAAAA,KAAK,EAAE;AAArB,OAJI,EAKJ;AAAEV,QAAAA,KAAK,EAAE,GAAT;AAAcU,QAAAA,KAAK,EAAE;AAArB,OALI;AADK,KAAb;AASD;;AAkBDrB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE,KAAKS,KAAL,CAAWC,IAAlC;AAAwC,MAAA,OAAO,MAA/C;AAAgD,MAAA,WAAW,EAAE,KAAKY,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKhB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD;;AArCiC","sourcesContent":["import React, { PureComponent } from 'react';\nimport { render } from 'react-dom';\nimport fp from 'lodash/fp';\nimport ReactD3PieChart from '../src';\n \nclass DemoApp extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        { label: 'A', value: 10 },\n        { label: 'B', value: 22 },\n        { label: 'C', value: 5 },\n        { label: 'D', value: 0 },\n        { label: 'E', value: 8 },\n      ],\n    };\n  }\n \n  handleClick = () => {\n    const lastData = fp.last(this.state.data);\n    const { label } = lastData;\n    const newLabel = String.fromCharCode(label.charCodeAt() + 1);\n    const newValue = Math.floor(Math.random() * 31);\n \n    this.setState({\n      data: [\n        ...this.state.data,\n        { label: newLabel, value: newValue },\n      ],\n    });\n  }\n \n  renderLabel = d => `Label is ${d.data.label}`\n \n  render() {\n    return (\n      <main>\n        <ReactD3PieChart data={this.state.data} tooltip renderLabel={this.renderLabel} />\n        <button onClick={this.handleClick}>Add Data</button>\n      </main>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}