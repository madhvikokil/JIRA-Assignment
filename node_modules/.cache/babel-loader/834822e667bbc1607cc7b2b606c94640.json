{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchTable.js\";\nimport React from 'react';\nexport default {\n  tableHeader: props => {\n    let o = Object.keys(props[0]);\n    return o.map(key => {\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  },\n  RenderRow: props => {\n    return props.keys.map((key, index) => {\n      return React.createElement(\"td\", {\n        key: props.data[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, props.data[key]);\n    });\n  },\n  tableRow: props => {\n    // var items = props;\n    // let propsLength = props.length;\n    // for(let i=0;i<propsLength;i++){\n    //         let o = Object.values(props[i]);\n    // return items.map((row, index)=>{\n    // return <tr key={index}><td>{o}</td></tr>\n    // })\n    //     let lengthOfProps = props.length;\n    //     let o=0;\n    //      o = Object.values(props[o]);\n    //      o = o + 1;\n    //     return props.map((row)=>{\n    //         return (<><tr>\n    //                 <td >{row.o}</td>\n    //                 {/* <td>{row.user}</td> */}\n    //                 </tr></>)\n    var items = props;\n    let keys = Object.keys(props[0]);\n    return items.map((row, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(RenderRow, {\n        key: index,\n        data: row,\n        keys: keys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    });\n  }\n};","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchTable.js"],"names":["React","tableHeader","props","o","Object","keys","map","key","toUpperCase","RenderRow","index","data","tableRow","items","row"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AAEXC,EAAAA,WAAW,EAAGC,KAAD,IAAW;AACpB,QAAIC,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAAC,CAAD,CAAjB,CAAR;AACA,WAAOC,CAAC,CAACG,GAAF,CAAOC,GAAD,IAAO;AACZ,aAAO;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeA,GAAG,CAACC,WAAJ,EAAf,CAAP;AACC,KAFF,CAAP;AAGH,GAPU;AASXC,EAAAA,SAAS,EAAEP,KAAD,IAAS;AACf,WAAOA,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMG,KAAN,KAAc;AACpC,aAAO;AAAI,QAAA,GAAG,EAAER,KAAK,CAACS,IAAN,CAAWJ,GAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BL,KAAK,CAACS,IAAN,CAAWJ,GAAX,CAA3B,CAAP;AACC,KAFM,CAAP;AAGA,GAbO;AAeXK,EAAAA,QAAQ,EAAGV,KAAD,IAAU;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,QAAIW,KAAK,GAAGX,KAAZ;AACA,QAAIG,IAAI,GAAGD,MAAM,CAACC,IAAP,CAAYH,KAAK,CAAC,CAAD,CAAjB,CAAX;AACA,WAAOW,KAAK,CAACP,GAAN,CAAU,CAACQ,GAAD,EAAMJ,KAAN,KAAc;AAC/B,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEA,KAAhB;AAAuB,QAAA,IAAI,EAAEI,GAA7B;AAAkC,QAAA,IAAI,EAAET,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAP;AACC,KAFM,CAAP;AAMK;AA5CE,CAAf","sourcesContent":["import React from 'react';\nexport default {\n\n    tableHeader: (props) => {\n        let o = Object.keys(props[0]);\n        return o.map((key)=>{\n                return <th key={key}>{key.toUpperCase()}</th>\n                })\n    },\n\n    RenderRow:(props)=>{\n        return props.keys.map((key, index)=>{\n        return <td key={props.data[key]}>{props.data[key]}</td>\n        })\n       },\n    \n    tableRow: (props) =>{\n\n        // var items = props;\n        // let propsLength = props.length;\n        // for(let i=0;i<propsLength;i++){\n        //         let o = Object.values(props[i]);\n        // return items.map((row, index)=>{\n        // return <tr key={index}><td>{o}</td></tr>\n        // })\n\n        //     let lengthOfProps = props.length;\n        //     let o=0;\n        //      o = Object.values(props[o]);\n        //      o = o + 1;\n        //     return props.map((row)=>{\n        //         return (<><tr>\n        //                 <td >{row.o}</td>\n        //                 {/* <td>{row.user}</td> */}\n        //                 </tr></>)\n               \n                  \n        var items = props;\n        let keys = Object.keys(props[0]);\n        return items.map((row, index)=>{\n        return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n        })\n\n        \n                \n            },\n\n            \n        \n        \n }\n"]},"metadata":{},"sourceType":"module"}