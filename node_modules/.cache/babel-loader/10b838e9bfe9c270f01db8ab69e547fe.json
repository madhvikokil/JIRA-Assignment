{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchBody.js\";\nimport React from 'react';\nexport default {\n  RenderRow: props => {\n    return props.keys.map((key, index) => {\n      return React.createElement(\"td\", {\n        key: props.data[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5\n        },\n        __self: this\n      }, props.data[key]));\n    });\n  },\n  RenderProgressRow: props => {\n    return props.keys.map((key, index) => {\n      if (typeof props.data.key == 'number') {\n        return React.createElement(\"td\", {\n          key: props.data[key],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, props.data[key]), \"  \", React.createElement(\"div\", {\n          class: \"progress\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"inside\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            display: 'inline',\n            width: 30 + 'px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }))), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"100%\"), \"  \");\n      }\n    });\n  }\n};\n{\n  /* <td key={key}><b>{key}</b>\n                 <div class=\"progress\">\n                     <div class=\"inside\"><span style={{display:'inline', width:30+'px' }}></span></div>                  \n                 </div><b>100%</b>\n                    \n         </td> */\n}\n{\n  /* <th key={key}>{key.toUpperCase()}</th> */\n}","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchBody.js"],"names":["React","RenderRow","props","keys","map","key","index","data","RenderProgressRow","display","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAc;AACVC,EAAAA,SAAS,EAAEC,KAAD,IAAS;AACf,WAAOA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KAAc;AACpC,aAAO;AAAI,QAAA,GAAG,EAAEJ,KAAK,CAACK,IAAN,CAAWF,GAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,KAAK,CAACK,IAAN,CAAWF,GAAX,CAAJ,CAA1B,CAAP;AACC,KAFM,CAAP;AAGA,GALM;AAOVG,EAAAA,iBAAiB,EAAEN,KAAD,IAAU;AAExB,WAAOA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KAAc;AAChC,UAAG,OAAOJ,KAAK,CAACK,IAAN,CAAWF,GAAlB,IAAyB,QAA5B,EAAqC;AACjC,eAAO;AAAI,UAAA,GAAG,EAAEH,KAAK,CAACK,IAAN,CAAWF,GAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIH,KAAK,CAACK,IAAN,CAAWF,GAAX,CAAJ,CAA1B,QAAoD;AAAK,UAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACvD;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoB;AAAM,UAAA,KAAK,EAAE;AAACI,YAAAA,OAAO,EAAC,QAAT;AAAmBC,YAAAA,KAAK,EAAC,KAAG;AAA5B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAApB,CADuD,CAApD,EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFC,OAAP;AAGH;AAQA,KAbE,CAAP;AAcI;AAvBE,CAAd;AA0BA;AAAC;;;;;;AAKgB;AAGjB;AAAC;AAA6C","sourcesContent":["import React from 'react';\nexport default{\n    RenderRow:(props)=>{\n        return props.keys.map((key, index)=>{\n        return <td key={props.data[key]}><b>{props.data[key]}</b></td>\n        })\n       },\n\n    RenderProgressRow:(props) =>{\n      \n        return props.keys.map((key, index)=>{\n            if(typeof props.data.key == 'number'){\n                return <td key={props.data[key]}><b>{props.data[key]}</b>  <div class=\"progress\">\n                    <div class=\"inside\"><span style={{display:'inline', width:30+'px' }}></span></div>                  \n                </div><b>100%</b>  </td>\n            }\n            \n           \n            \n                   \n     \n                            \n                     \n            })\n           }\n    }\n\n{/* <td key={key}><b>{key}</b>\n                <div class=\"progress\">\n                    <div class=\"inside\"><span style={{display:'inline', width:30+'px' }}></span></div>                  \n                </div><b>100%</b>\n                   \n        </td> */}\n\n\n{/* <th key={key}>{key.toUpperCase()}</th> */}"]},"metadata":{},"sourceType":"module"}