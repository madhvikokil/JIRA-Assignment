{"ast":null,"code":"\"use strict\";\n\nmodule.exports = ProjectValidateClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/projectvalidate'\r\n *\r\n * @param {JiraClient} jiraClient\r\n * @constructor ProjectValidateClient\r\n */\n\nfunction ProjectValidateClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Validates a project key.  This endpoint is a little wonky, as it returns a list of errors as a valid response;\r\n   * even if the key is invalid, it still returns a 200 response.\r\n   * See {@link https://docs.atlassian.com/jira/REST/latest/#d2e297}\r\n   *\r\n   * @method validateProjectKey\r\n   * @memberOf ProjectValidateClient#\r\n   * @param opts The request options sent to the Jira API.\r\n   * @param opts.projectKey The key of the project.\r\n   * @param [callback] Called when the key has been validated.\r\n   * @return {Promise} Resolved when the key has been validated.\r\n   */\n\n  this.validateProjectKey = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/projectvalidate/key'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true,\n      qs: {\n        key: opts.projectKey\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}