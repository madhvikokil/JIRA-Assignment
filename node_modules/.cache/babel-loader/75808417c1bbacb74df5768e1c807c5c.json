{"ast":null,"code":"\"use strict\";\n\nmodule.exports = ProjectCategoryClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/projectCategory'\r\n *\r\n * @param {JiraClient} jiraClient\r\n * @constructor ProjectCategoryClient\r\n */\n\nfunction ProjectCategoryClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Returns a list of all projectCategories visible to the user\r\n   *\r\n   * @method getAllProjectCategories\r\n   * @memberOf ProjectCategoryClient#\r\n   * @param opts Ignored\r\n   * @param [callback] Called when the statusCategories have been retrieved.\r\n   * @return {Promise} Resolved when the statusCategories have been retrieved.\r\n   */\n\n  this.getAllProjectCategories = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/projectCategory'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n  /**\r\n   * Get a full representation of the projectCategory that has the given id.\r\n   *\r\n   * @method getProjectCategory\r\n   * @memberOf ProjectCategoryClient#\r\n   * @param opts The options sent to the Jira API\r\n   * @param opts.projectCategoryId A String containing a projectCategory id\r\n   * @param [callback] Called when the projectCategory has been retrieved.\r\n   * @return {Promise} Resolved when the projectCategory has been retrieved.\r\n   */\n\n\n  this.getProjectCategory = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/projectCategory/' + opts.projectCategoryId),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}