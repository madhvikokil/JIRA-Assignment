{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch2.js\";\nimport React from 'react';\nimport FetchApi from '../utility/fetchApi';\nimport FetchTable from '../utility/tableData';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass Fetch2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      actualData: [],\n      length: '',\n      totalCount: [],\n      issueCount: ''\n    };\n\n    this.componentDidMount = async () => {\n      const data1 = await this.data();\n      console.log(\"DATA 1 ===>>>\", data1);\n      const data2 = await this.data2();\n      console.log(\"Data 2  => \", data2);\n      console.log(\"updated array : \", this.state.actualData);\n    };\n\n    this.tableData = () => {\n      FetchTable.tableHeader(this.state.data);\n    };\n\n    this.data = () => {\n      let project = localStorage.getItem('project');\n      return new Promise((resolve, reject) => {\n        let url = localStorage.getItem('url');\n        let arrayOfUsers = [];\n        FetchApi.callApi(\"\".concat(url, \"/rest/api/2/user/assignable/search?project=\").concat(project)).then(res => {\n          console.log(\"response : \", res);\n          console.log(res.length);\n\n          for (let i = 0; i < res.length; i++) {\n            arrayOfUsers.push(res[i].name);\n          }\n\n          this.setState({\n            data: arrayOfUsers\n          });\n          resolve(arrayOfUsers);\n        }).catch(error => {\n          console.log(\"error : \", error);\n          reject(error);\n        });\n      });\n    };\n\n    this.data2 = () => {\n      let project = localStorage.getItem('project');\n      let url = localStorage.getItem('url');\n      let array = [];\n      return new Promise((resolve, reject) => {\n        for (let i = 0; i < this.state.data.length; i++) {\n          const api = FetchApi.callApi(\"\".concat(url, \"/rest/api/3/search?jql=assignee=\").concat(this.state.data[i]));\n          api.then(res => {\n            console.log(\"response after data fetching : \", res);\n            let inProgressStoryPointCount = 0;\n            let todoStoryPoint = 0;\n            let doneStoryPoint = 0;\n            let reviewStoryPoint = 0;\n            let acceptedStoryPoint = 0;\n            let resolvedStoryPoint = 0;\n            let inProgressSum = 0;\n            let acceptedSum = 0;\n            let todoSum = 0;\n            let reviewSum = 0;\n            let resolvedSum = 0;\n            let doneSum = 0;\n            let storyPointSum = 0;\n            let anotherArray = [];\n            let storyPoint = 0;\n            let finalCount = 0;\n            let count = res.total;\n\n            for (let i = 0; i < count; i++) {\n              if (res.issues[i].fields.project.key == \"\".concat([project])) {\n                console.log(\"name of the user' : \", res.issues[i].fields.assignee.name);\n                anotherArray.push(res.issues[i].fields.assignee.name);\n                console.log(anotherArray);\n                console.log(\"length : \", anotherArray.length);\n                storyPoint = storyPoint + res.issues[i].fields.customfield_10024;\n\n                if (res.issues[i].fields.status.name == \"In Progress\") {\n                  inProgressStoryPointCount = inProgressStoryPointCount + res.issues[i].fields.customfield_10024;\n                }\n\n                if (res.issues[i].fields.status.name == \"To Do\" || res.issues[i].fields.status.name == \"Open\") {\n                  todoStoryPoint = todoStoryPoint + res.issues[i].fields.customfield_10024;\n                }\n\n                if (res.issues[i].fields.status.name == \"Done\") {\n                  doneStoryPoint = doneStoryPoint + res.issues[i].fields.customfield_10024;\n                }\n\n                if (res.issues[i].fields.status.name == \"Review\") {\n                  reviewStoryPoint = reviewStoryPoint + res.issues[i].fields.customfield_10024;\n                }\n\n                if (res.issues[i].fields.status.name == \"Accepted\") {\n                  acceptedStoryPoint = acceptedStoryPoint + res.issues[i].fields.customfield_10024;\n                }\n\n                if (res.issues[i].fields.status.name == \"Resolved\") {\n                  resolvedStoryPoint = resolvedStoryPoint + res.issues[i].fields.customfield_10024;\n                }\n              }\n\n              finalCount = anotherArray.length;\n            }\n\n            console.log(count);\n            let obj = {\n              //issue_count : finalCount,\n              assignee: res.issues[0].fields.assignee.name,\n              open: todoStoryPoint,\n              accepted: acceptedStoryPoint,\n              in_Progress: inProgressStoryPointCount,\n              review: reviewStoryPoint,\n              resolved: resolvedStoryPoint,\n              done: doneStoryPoint,\n              storyPoint: storyPoint\n            };\n            let issueLength = {\n              issueCount: finalCount\n            };\n            this.setState({\n              issueCount: [...this.state.issueCount, issueLength]\n            });\n            this.setState({\n              actualData: [...this.state.actualData, obj]\n            });\n\n            if (this.state.data.length - 1 == this.state.actualData.length - 1) {\n              for (let i = 0; i < this.state.actualData.length; i++) {\n                inProgressSum = inProgressSum + this.state.actualData[i].in_Progress;\n                acceptedSum = acceptedSum + this.state.actualData[i].accepted;\n                todoSum = todoSum + this.state.actualData[i].open;\n                reviewSum = reviewSum + this.state.actualData[i].review;\n                resolvedSum = resolvedSum + this.state.actualData[i].resolved;\n                doneSum = doneSum + this.state.actualData[i].done;\n                storyPointSum = storyPointSum + this.state.actualData[i].storyPoint;\n              }\n\n              let obj2 = {\n                todoSum: todoSum,\n                acceptedSum: acceptedSum,\n                inProgressSum: inProgressSum,\n                reviewSum: reviewSum,\n                resolvedSum: resolvedSum,\n                doneSum: doneSum,\n                storyPointSum: storyPointSum\n              };\n              this.setState({\n                totalCount: obj2\n              });\n              resolve(array);\n            }\n          }).catch(error => {\n            console.log(\"error : \", error);\n            reject(error);\n          });\n        }\n      });\n    };\n\n    this.lastTable = () => {\n      this.props.history.goBack();\n    };\n\n    this.progressBar = () => {\n      console.log(\"Showing the progress bars\");\n    };\n  }\n\n  render() {\n    debugger;\n    let posts;\n\n    if (this.state.actualData.length > 0) {\n      posts = React.createElement(React.Fragment, null, React.createElement(\"table\", {\n        class: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        class: \"thead-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, FetchTable.tableHeader(this.state.actualData))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, FetchTable.tableRow(this.state.actualData)), this.state.totalCount ? React.createElement(\"tfoot\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Total\"), FetchTable.tableFooter(this.state.totalCount))) : null), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Story Points by Assignee and Status\"), React.createElement(Button, {\n      class: \"ui button\",\n      as: Link,\n      to: \"/logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Log out\"), \"  \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), posts, React.createElement(Button, {\n      onClick: this.lastTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"  Previous  \"));\n  }\n\n}\n\nexport default Fetch2;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch2.js"],"names":["React","FetchApi","FetchTable","Button","Link","Fetch2","Component","state","data","actualData","length","totalCount","issueCount","componentDidMount","data1","console","log","data2","tableData","tableHeader","project","localStorage","getItem","Promise","resolve","reject","url","arrayOfUsers","callApi","then","res","i","push","name","setState","catch","error","array","api","inProgressStoryPointCount","todoStoryPoint","doneStoryPoint","reviewStoryPoint","acceptedStoryPoint","resolvedStoryPoint","inProgressSum","acceptedSum","todoSum","reviewSum","resolvedSum","doneSum","storyPointSum","anotherArray","storyPoint","finalCount","count","total","issues","fields","key","assignee","customfield_10024","status","obj","open","accepted","in_Progress","review","resolved","done","issueLength","obj2","lastTable","props","history","goBack","progressBar","render","posts","tableRow","tableFooter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FetchApi from '../utility/fetchApi';\nimport FetchTable from '../utility/tableData';\nimport { Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass Fetch2 extends React.Component{\n\n  state={\n        data:[],\n        actualData:[],\n        length:'',\n        totalCount:[],\n        issueCount :''\n  }\n\n  componentDidMount =async()=>{ \n\n    const data1 = await this.data();\n    console.log(\"DATA 1 ===>>>\", data1);\n    const data2 = await this.data2();\n    console.log(\"Data 2  => \",data2);\n    console.log(\"updated array : \",this.state.actualData);\n    }\n\n    tableData=()=>{\n      FetchTable.tableHeader(this.state.data);\n    }\n\n    data =() =>{\n      let project = localStorage.getItem('project');\n     return new Promise( (resolve, reject) => {\n      let url = localStorage.getItem('url');\n      let arrayOfUsers = [];\n      \n      FetchApi.callApi(`${url}/rest/api/2/user/assignable/search?project=${project}`).then(res => {\n        console.log(\"response : \",res);\n        console.log(res.length);\n        for(let i=0;i<res.length;i++){\n              arrayOfUsers.push(res[i].name);\n            }\n            this.setState({data : arrayOfUsers});\n            resolve(arrayOfUsers);\n         \n          }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n\n     } )\n    }\n\n    data2=()=>{\n      let project = localStorage.getItem('project');\n      let url = localStorage.getItem('url');\n      let array = [];\n      return new Promise( (resolve, reject) => {\n\n      for(let i=0;i<this.state.data.length;i++){\n        const api = FetchApi.callApi(`${url}/rest/api/3/search?jql=assignee=${this.state.data[i]}`);\n      api.then(res => {\n        console.log(\"response after data fetching : \",res);\n                let inProgressStoryPointCount=0;\n                let todoStoryPoint=0;\n                let doneStoryPoint=0;\n                let reviewStoryPoint=0;\n                let acceptedStoryPoint=0;\n                let resolvedStoryPoint=0;\n                let inProgressSum=0;\n                let acceptedSum=0;\n                let todoSum = 0;\n                let reviewSum = 0;\n                let resolvedSum = 0;\n                let doneSum = 0;\n                let storyPointSum = 0;\n                let anotherArray = [];\n                let storyPoint=0;\n                let finalCount=0;\n                let count = res.total;\n                for(let i =0;i<count ;i++){\n                  if(res.issues[i].fields.project.key ==  `${[project]}`){\n                    console.log(\"name of the user' : \",res.issues[i].fields.assignee.name);\n                    anotherArray.push(res.issues[i].fields.assignee.name);\n                    console.log(anotherArray);\n                    \n                    console.log(\"length : \",anotherArray.length);\n\n                    storyPoint =storyPoint +  res.issues[i].fields.customfield_10024;\n                  \n                    if(res.issues[i].fields.status.name == \"In Progress\"){\n                        inProgressStoryPointCount = inProgressStoryPointCount + res.issues[i].fields.customfield_10024;\n                        \n                      }\n                    \n                     if(res.issues[i].fields.status.name == \"To Do\" || res.issues[i].fields.status.name == \"Open\"){\n                        todoStoryPoint = todoStoryPoint + res.issues[i].fields.customfield_10024;\n            \n                      }\n                    \n                      if(res.issues[i].fields.status.name == \"Done\"){\n                        doneStoryPoint = doneStoryPoint + res.issues[i].fields.customfield_10024;\n                    \n                      }\n                    \n                       if(res.issues[i].fields.status.name == \"Review\"){\n                        reviewStoryPoint = reviewStoryPoint + res.issues[i].fields.customfield_10024;\n                        \n                      }\n\n                       if(res.issues[i].fields.status.name == \"Accepted\"){\n                        acceptedStoryPoint = acceptedStoryPoint + res.issues[i].fields.customfield_10024;\n                      }\n                    \n                       if(res.issues[i].fields.status.name == \"Resolved\"){\n                        resolvedStoryPoint = resolvedStoryPoint + res.issues[i].fields.customfield_10024;\n                      }\n\n                  }\n                  finalCount = anotherArray.length;\n\n                  \n                }\n                console.log(count);\n\n               let obj ={\n                    //issue_count : finalCount,\n                    assignee:res.issues[0].fields.assignee.name,\n                    open:todoStoryPoint,\n                    accepted:acceptedStoryPoint,\n                    in_Progress:inProgressStoryPointCount,\n                    review:reviewStoryPoint,\n                    resolved:resolvedStoryPoint,  \n                    done:doneStoryPoint,\n\n                    storyPoint:storyPoint\n                }\n\n                let issueLength ={\n                  issueCount : finalCount\n                }\n                this.setState({issueCount:[...this.state.issueCount,issueLength]})\n                this.setState({actualData:[...this.state.actualData,obj]});\n                         \n                if(this.state.data.length-1 == this.state.actualData.length-1){\n                  for(let i=0;i<this.state.actualData.length;i++){\n                    inProgressSum = inProgressSum + this.state.actualData[i].in_Progress;\n                    acceptedSum = acceptedSum + this.state.actualData[i].accepted;\n                    todoSum = todoSum + this.state.actualData[i].open;\n                    reviewSum = reviewSum + this.state.actualData[i].review;\n                    resolvedSum = resolvedSum + this.state.actualData[i].resolved;\n                    doneSum = doneSum + this.state.actualData[i].done;\n                    storyPointSum = storyPointSum + this.state.actualData[i].storyPoint;\n                  }\n                  let obj2 = {\n                    todoSum :todoSum,\n                    acceptedSum :acceptedSum,\n                    inProgressSum:inProgressSum,\n                    reviewSum :reviewSum,\n                    resolvedSum :resolvedSum,\n                    doneSum :doneSum,\n                    storyPointSum:storyPointSum\n                  }\n                this.setState({totalCount:obj2});\n                resolve(array);\n            }\n\n      }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n      }  \n    })\n  }\n    \n    lastTable=()=>{\n        this.props.history.goBack();\n    }\n\n    progressBar =() =>{\n      console.log(\"Showing the progress bars\");\n    }\n   \n   \n  render(){\n    debugger;\n    let posts ;\n    if(this.state.actualData.length > 0) {\n      posts =   <>\n        <table class=\"table\">\n          <thead class=\"thead-dark\">\n            <tr>\n              {FetchTable.tableHeader(this.state.actualData)}\n            </tr>\n          </thead>\n\n          <tbody>\n              {FetchTable.tableRow(this.state.actualData)}\n          </tbody>\n        {this.state.totalCount ? \n\n          <tfoot>\n            <tr>\n              <th>Total</th>{FetchTable.tableFooter(this.state.totalCount)}\n            </tr>\n        \n          </tfoot>\n        :null}   \n       </table> \n        <br/>\n        </>\n    }\n  \n  return(\n      <><br />\n  <h1>Story Points by Assignee and Status</h1>\n  <Button class=\"ui button\"  as={Link} to ='/logout'>Log out</Button>  <br /><br />\n  {posts}\n  <Button onClick={this.lastTable}>  Previous  </Button>\n\n      </>\n\n    )\n  }\n}\n\nexport default Fetch2;\n"]},"metadata":{},"sourceType":"module"}