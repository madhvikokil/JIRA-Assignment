{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/container/login.js\";\nimport React from 'react';\nimport { Button, Form, Grid, Header, Segment, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport superagent from 'superagent';\nimport FetchApi from '../utility/fetchApi';\nimport Validator from \"validatorjs\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      url: '',\n      errorMessage: {\n        email: '',\n        password: '',\n        url: ''\n      }\n    };\n\n    this.validate = () => {\n      const rules = {\n        email: 'required|email',\n        password: 'required',\n        url: 'required'\n      };\n      let validation = new Validator(this.state.form, rules);\n      let isError = validation.fails();\n      this.setState({\n        errorMessage: validation.errors.errors\n      });\n      return isError;\n    };\n\n    this.routeToTables = () => {\n      // if(this.state.email==null || this.state.password==null || this.state.url== null){\n      //     alert(\"Fill the details...\");\n      // }\n      let a = window.btoa(\"\".concat(this.state.email, \":\").concat(this.state.password));\n      console.log(a);\n      localStorage.setItem('token', a);\n      superagent.get(\"\".concat(this.state.url, \"/rest/api/3/project\")).set('Access-Control-Allow-Credentials', '*').set('Accept', 'application/json').set('Authorization', \"Basic \".concat(a)).end((err, res) => {\n        if (err) {\n          return alert(\"Invalid User\", err);\n        }\n\n        localStorage.setItem('url', \"\".concat(this.state.url));\n        console.log(\"response : \", res.body);\n        console.log(\"Table routing\");\n        alert(\"Successfully Logged...\");\n        this.props.history.push('/tableSheet');\n      });\n    };\n\n    this.getValidationMessages = () => {\n      let validationMessages = [];\n\n      if (this.state.errorMessage.email) {\n        validationMessages.push(React.createElement(Message, {\n          key: \"1\",\n          size: \"mini\",\n          error: true,\n          content: this.state.errorMessage.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.errorMessage.password) {\n        validationMessages.push(React.createElement(Message, {\n          key: \"2\",\n          size: \"mini\",\n          error: true,\n          content: this.state.errorMessage.password,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      }\n\n      if (this.state.errorMessage.url) {\n        validationMessages.push(React.createElement(Message, {\n          key: \"3\",\n          size: \"mini\",\n          error: true,\n          content: this.state.errorMessage.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }));\n      }\n\n      return validationMessages;\n    };\n\n    this.changeEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.changePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.changeUrl = event => {\n      this.setState({\n        url: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: '100vh'\n      },\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      color: \"teal\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Log-in to your account\"), React.createElement(Form, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail address\",\n      onChange: this.changeEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Token\",\n      type: \"token\",\n      onChange: this.changePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"URL\",\n      type: \"url\",\n      onChange: this.changeUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\",\n      onClick: this.routeToTables,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/container/login.js"],"names":["React","Button","Form","Grid","Header","Segment","Message","superagent","FetchApi","Validator","Login","Component","state","email","password","url","errorMessage","validate","rules","validation","form","isError","fails","setState","errors","routeToTables","a","window","btoa","console","log","localStorage","setItem","get","set","end","err","res","alert","body","props","history","push","getValidationMessages","validationMessages","changeEmail","event","target","value","changePassword","changeUrl","render","height","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Form, Grid, Header, Segment,Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport superagent from 'superagent';\nimport FetchApi from '../utility/fetchApi';\nimport Validator from \"validatorjs\";\n\n\nclass Login extends React.Component{\n\n    state ={\n        email:'',\n        password:'',\n        url:'',\n        errorMessage:{\n            email:'',\n            password:'',\n            url:''\n        }\n    }\n\n    validate = () => {\n        const rules = {\n          email: 'required|email',\n          password: 'required',\n          url: 'required'\n        };\n    \n        let validation = new Validator(this.state.form, rules);\n        let isError = validation.fails();\n        this.setState({ errorMessage: validation.errors.errors });\n        return isError;\n    }\n    \n    routeToTables = () => {\n        \n        // if(this.state.email==null || this.state.password==null || this.state.url== null){\n        //     alert(\"Fill the details...\");\n        // }\n        let a = window.btoa(`${this.state.email}:${this.state.password}`);\n        console.log(a);\n        localStorage.setItem('token',a);\n        superagent\n            .get(`${this.state.url}/rest/api/3/project`)\n            .set('Access-Control-Allow-Credentials', '*')\n            .set('Accept', 'application/json')\n            .set('Authorization', `Basic ${a}`)\n            .end((err, res) => {\n                if (err) { return alert(\"Invalid User\",err)}\n                localStorage.setItem('url',`${this.state.url}`);\n                console.log(\"response : \",res.body);\n                console.log(\"Table routing\");\n                alert(\"Successfully Logged...\");\n                this.props.history.push('/tableSheet');\n      \n            })        \n    }\n\n    getValidationMessages = () => {\n        let validationMessages = [];\n        if (this.state.errorMessage.email) {\n          validationMessages.push(<Message key=\"1\"\n            size='mini'\n            error\n            content={this.state.errorMessage.email} />)\n        }\n        if (this.state.errorMessage.password) {\n          validationMessages.push(<Message key=\"2\"\n            size='mini'\n            error\n            content={this.state.errorMessage.password} />)\n        }\n        if (this.state.errorMessage.url) {\n          validationMessages.push(<Message key=\"3\"\n            size='mini'\n            error\n            content={this.state.errorMessage.url} />)\n        }\n        return validationMessages;\n      }\n\n    changeEmail = (event) => {\n        this.setState({email : event.target.value})\n    }\n\n    changePassword = (event) => {\n        this.setState({password : event.target.value})\n    }\n\n    changeUrl = (event) => {\n        this.setState({url : event.target.value})\n    }\n\n    render(){\n        return(\n            <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h1' color='teal' textAlign='center'>\n                Log-in to your account\n                </Header>\n                    <Form size='large'>\n                        <Segment stacked>\n                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' onChange={this.changeEmail}/>\n            \n                    <Form.Input\n                    fluid\n                    icon='lock'\n                    iconPosition='left'\n                    placeholder='Token'\n                    type='token'\n                    onChange={this.changePassword}\n                    />\n\n                    <Form.Input\n                    fluid\n                    icon='lock'\n                    iconPosition='left'\n                    placeholder='URL'\n                    type='url'\n                    onChange={this.changeUrl}\n                    />\n                    <Button color='teal' fluid size='large' onClick={this.routeToTables}>\n                        Login\n                    </Button>\n                    </Segment>\n                </Form>\n      {/* <Message>\n         New to us? <a href='#'>Sign Up</a> \n      </Message> */}\n            </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}