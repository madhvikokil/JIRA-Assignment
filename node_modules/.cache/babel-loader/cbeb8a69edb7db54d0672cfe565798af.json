{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/projects.js\";\nimport React from 'react';\nimport FetchApi from '../utility/fetchApi';\n\nclass Projects extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      projects: [],\n      length: ''\n    };\n\n    this.onClickHandler = id => {\n      console.log(\"id clicked :\", id); //this.props.history.push('/tablesheet/table1');\n    };\n  }\n\n  componentDidMount() {\n    let url = localStorage.getItem('url');\n    let listOfProjects = [];\n    let projectLength = 0;\n    FetchApi.callApi(\"\".concat(url, \"/rest/api/3/project\")).then(res => {\n      // console.log(\"res\",res);\n      // console.log(\"res length : \",res.length);\n      projectLength = res.length;\n\n      for (let i = 0; i < res.length; i++) {\n        console.log(res[i].key);\n        this.setState({\n          projects: [...this.state.projects, res[i].key]\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    debugger;\n    let project;\n\n    if (this.state.projects.length > 0) {\n      project = this.state.projects.map(id => React.createElement(React.Fragment, null, React.createElement(\"button\", {\n        onClick: this.onClickHandler(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, id), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"List of Projects\"), project);\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/projects.js"],"names":["React","FetchApi","Projects","Component","state","projects","length","onClickHandler","id","console","log","componentDidMount","url","localStorage","getItem","listOfProjects","projectLength","callApi","then","res","i","key","setState","catch","error","render","project","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE3B;AACHC,MAAAA,QAAQ,EAAC,EADN;AAEHC,MAAAA,MAAM,EAAC;AAFJ,KAF2B;;AAAA,SAMlCC,cANkC,GAMlBC,EAAD,IAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,EAA3B,EADiB,CAEjB;AACH,KATiC;AAAA;;AAUlCG,EAAAA,iBAAiB,GAAE;AAEf,QAAIC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAV;AACA,QAAIC,cAAc,GAAG,EAArB;AACA,QAAIC,aAAa,GAAC,CAAlB;AACAf,IAAAA,QAAQ,CAACgB,OAAT,WAAoBL,GAApB,0BACCM,IADD,CACMC,GAAG,IAAG;AACR;AACA;AACAH,MAAAA,aAAa,GAAGG,GAAG,CAACb,MAApB;;AACA,WAAI,IAAIc,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACD,GAAG,CAACb,MAAlB,EAAyBc,CAAC,EAA1B,EAA6B;AACzBX,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,CAAD,CAAH,CAAOC,GAAnB;AACA,aAAKC,QAAL,CAAc;AAACjB,UAAAA,QAAQ,EAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAwBc,GAAG,CAACC,CAAD,CAAH,CAAOC,GAA/B;AAAV,SAAd;AACH;AAEJ,KAVD,EAUGE,KAVH,CAUSC,KAAK,IAAG;AACbf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACH,KAZD;AAaH;;AACDC,EAAAA,MAAM,GAAE;AACJ;AACA,QAAIC,OAAJ;;AACA,QAAG,KAAKtB,KAAL,CAAWC,QAAX,CAAoBC,MAApB,GAA6B,CAAhC,EAAkC;AAC9BoB,MAAAA,OAAO,GACP,KAAKtB,KAAL,CAAWC,QAAX,CAAoBsB,GAApB,CAAwBnB,EAAE,IAAK,0CAC3B;AAAQ,QAAA,OAAO,EAAE,KAAKD,cAAL,CAAoBC,EAApB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2CA,EAA3C,CAD2B,EAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD5B,EACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADjC,CAA/B,CADA;AAMH;;AAID,WACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAECkB,OAFD,CADJ;AAMH;;AAjDiC;;AAoDtC,eAAexB,QAAf","sourcesContent":["import React from 'react';\nimport FetchApi from '../utility/fetchApi';\n\nclass Projects extends React.Component{\n\n    state ={\n        projects:[],\n        length:''\n    }\n    onClickHandler=(id)=>{\n        console.log(\"id clicked :\",id);\n        //this.props.history.push('/tablesheet/table1');\n    }\n    componentDidMount(){\n        \n        let url = localStorage.getItem('url');\n        let listOfProjects = [];\n        let projectLength=0;\n        FetchApi.callApi(`${url}/rest/api/3/project`)\n        .then(res =>{\n            // console.log(\"res\",res);\n            // console.log(\"res length : \",res.length);\n            projectLength = res.length;\n            for(let i=0;i<res.length;i++){\n                console.log(res[i].key);\n                this.setState({projects:[...this.state.projects,res[i].key]})\n            }\n            \n        }).catch(error =>{\n            console.log(error);\n        })\n    }\n    render(){\n        debugger;\n        let project;\n        if(this.state.projects.length > 0){\n            project =\n            this.state.projects.map(id => (<>\n                <button onClick={this.onClickHandler(id)}>{id}</button><br/><br/></>\n            ))\n           \n            \n        }\n       \n        \n    \n        return(\n            <>\n            <h2>List of Projects</h2>\n            {project}\n            </>\n        )\n    }\n}\n\nexport default Projects;"]},"metadata":{},"sourceType":"module"}