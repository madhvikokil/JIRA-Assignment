{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js\";\nimport React from 'react';\nimport FetchApi from '../utility/fetchApi';\n\nclass Fetch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      actualData: [],\n      length: ''\n    };\n\n    this.componentDidMount = async () => {\n      const data1 = await this.data();\n      console.log(\"DATA 1 ===>>>\", data1);\n      const data2 = await this.data2();\n      console.log(\"Data 2  => \", data2);\n      console.log(\"updated array : \", this.state.actualData);\n    };\n\n    this.data = () => {\n      return new Promise((resolve, reject) => {\n        let url = localStorage.getItem('url');\n        let arrayOfUsers = [];\n        FetchApi.callApi(\"\".concat(url, \"/rest/api/2/user/assignable/search?project=REAC\")).then(res => {\n          console.log(\"response : \", res);\n          console.log(res.length);\n\n          for (let i = 0; i < res.length; i++) {\n            arrayOfUsers.push(res[i].key);\n          }\n\n          this.setState({\n            data: arrayOfUsers\n          });\n          resolve(arrayOfUsers);\n        }).catch(error => {\n          console.log(\"error : \", error);\n          reject(error);\n        });\n      });\n    };\n\n    this.data2 = () => {\n      let url = localStorage.getItem('url'); // let array = [];\n\n      return new Promise((resolve, reject) => {\n        for (let i = 0; i < this.state.data.length; i++) {\n          const api = FetchApi.callApi(\"\".concat(url, \"/rest/api/3/search?jql=assignee=\").concat(this.state.data[i]));\n          api.then(res => {\n            console.log(\"response after data fetching : \", res);\n            let timeOriginalEstimate = 0;\n            let storyPoint = 0;\n            let timeEstimate = 0;\n            let timeSpent = 0;\n            let count = res.total;\n\n            for (let i = 0; i < count; i++) {\n              storyPoint = storyPoint + res.issues[i].fields.customfield_10024;\n              timeEstimate = timeEstimate + res.issues[i].fields.timeestimate;\n              timeSpent = timeSpent + res.issues[i].fields.timespent;\n              timeOriginalEstimate = timeOriginalEstimate + res.issues[i].fields.timeoriginalestimate;\n            } //console.log(count);\n\n\n            let obj = {\n              total: res.total,\n              user: res.issues[0].fields.assignee.name,\n              timeOriginalEstimate: timeOriginalEstimate / 3600,\n              storyPoint: storyPoint,\n              timeEstimate: timeEstimate / 3600,\n              timeSpent: timeSpent / 3600 // issueLength:res.issue.length()\n\n            };\n            array.push(obj);\n            console.log(\"pushed array : \", array);\n            this.setState({\n              actualData: [...this.state.actualData, array]\n            });\n\n            if (this.state.data.length - 1 == this.state.actualData.length - 1) {\n              resolve(array);\n            }\n          }).catch(error => {\n            console.log(\"error : \", error);\n            reject(error);\n          });\n        }\n      });\n    };\n  }\n\n  // if(arrayOfUsers.length == 5){\n  //   for(let i=0;i<5;i++){\n  //     const anotherApi =  FetchApi.callApi(`${url}/rest/api/3/search?jql=assignee=${arrayOfUsers[i]}`);\n  //     anotherApi.then(response => {\n  //       console.log(\"response : \",response);\n  //     })\n  //   }\n  // }\n  // <FetchApi url='https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC'/>\n  //url ={'https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC'}/>\n  //   // superagent\n  //   // .get(`https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC`)\n  //   // .set('Access-Control-Allow-Credentials', '*')\n  //   // .set('Accept', 'application/json')\n  //   // .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n  //   console.log(\"response : \",response.body.length);\n  //   for(let i=0;i<response.body.length;i++){\n  //     arrayOfUsers.push(response.body[i].key);\n  //   }\n  //   console.log(\"array : \",arrayOfUsers);\n  //   for(let i=0;i<arrayOfUsers.length;i++){\n  //     const re = await \n  //     superagent\n  //     .get(`https://madhvi.atlassian.net/rest/api/3/search?jql=assignee=${arrayOfUsers[i]}`)\n  //     .set('Access-Control-Allow-Credentials', '*')\n  //     .set('Accept', 'application/json')\n  //     .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n  //     .end((err, res) => {\n  //       if (err) { return console.log(\"error : \",err); }\n  //       console.log(\"url 2 \");\n  //     let timeOriginalEstimate = 0;\n  //     let storyPoint=0;\n  //     let timeEstimate=0;\n  //     let timeSpent=0;\n  //     let count = res.total;\n  //     for(let i =0;i<count ;i++){\n  //         storyPoint =storyPoint +  res.issues[i].fields.customfield_10024;\n  //         timeEstimate = timeEstimate + res.issues[i].fields.timeestimate;\n  //         timeSpent = timeSpent + res.issues[i].fields.timespent;\n  //         timeOriginalEstimate = timeOriginalEstimate + res.issues[i].fields.timeoriginalestimate;\n  //     }\n  //    obj ={\n  //         total : res.total,\n  //         user:res.issues[0].fields.assignee.name,\n  //         timeOriginalEstimate:timeOriginalEstimate/3600,\n  //         storyPoint:storyPoint,\n  //         timeEstimate:timeEstimate/3600,\n  //         timeSpent:timeSpent/3600\n  //         // issueLength:res.issue.length()\n  //     }\n  //     dataOfUsers.push(obj);\n  //     })\n  //   }\n  //   //this.setState({actualData:obj});\n  //   this.setState({actualData:dataOfUsers});\n  //   console.log(\"this.state.actualData : \", this.state.actualData);\n  // }\n  // getKeys=() => {\n  //   console.log(\"get \");\n  render() {\n    debugger;\n    let posts = React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.actualData.map(id => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, id.user)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, id.timeOriginalEstimate)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, id.timeEstimate)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, id.storyPoint)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, id.timeSpent)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, id.total)))));\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Show\"), posts);\n  }\n\n}\n\nexport default Fetch;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js"],"names":["React","FetchApi","Fetch","Component","state","data","actualData","length","componentDidMount","data1","console","log","data2","Promise","resolve","reject","url","localStorage","getItem","arrayOfUsers","callApi","then","res","i","push","key","setState","catch","error","api","timeOriginalEstimate","storyPoint","timeEstimate","timeSpent","count","total","issues","fields","customfield_10024","timeestimate","timespent","timeoriginalestimate","obj","user","assignee","name","array","render","posts","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FetchApi from '../utility/fetchApi';\nclass Fetch extends React.Component{\n\n  state={\n        data:[],\n        actualData:[],\n        length:''\n  }\n\n \n     componentDidMount =async()=>{ \n\n    const data1 = await this.data();\n    console.log(\"DATA 1 ===>>>\", data1);\n    const data2 = await this.data2();\n    console.log(\"Data 2  => \",data2);\n    console.log(\"updated array : \",this.state.actualData);\n  \n    }\n\n\n    data =() =>{\n     return new Promise( (resolve, reject) => {\n      let url = localStorage.getItem('url');\n      let arrayOfUsers = [];\n      \n      FetchApi.callApi(`${url}/rest/api/2/user/assignable/search?project=REAC`).then(res => {\n        console.log(\"response : \",res);\n        console.log(res.length);\n        for(let i=0;i<res.length;i++){\n              arrayOfUsers.push(res[i].key);\n            \n            }\n            \n            this.setState({data : arrayOfUsers});\n            resolve(arrayOfUsers);\n            \n      \n      }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n\n     } )\n    }\n\n    data2=()=>{\n      let url = localStorage.getItem('url');\n      // let array = [];\n      return new Promise( (resolve, reject) => {\n\n      for(let i=0;i<this.state.data.length;i++){\n        const api = FetchApi.callApi(`${url}/rest/api/3/search?jql=assignee=${this.state.data[i]}`);\n      api.then(res => {\n        console.log(\"response after data fetching : \",res);\n        let timeOriginalEstimate = 0;\n        let storyPoint=0;\n        let timeEstimate=0;\n        let timeSpent=0;\n        let count = res.total;\n        for(let i =0;i<count ;i++){\n            storyPoint =storyPoint +  res.issues[i].fields.customfield_10024;\n            timeEstimate = timeEstimate + res.issues[i].fields.timeestimate;\n            timeSpent = timeSpent + res.issues[i].fields.timespent;\n            timeOriginalEstimate = timeOriginalEstimate + res.issues[i].fields.timeoriginalestimate;\n        }\n        //console.log(count);\n        let obj ={\n            total : res.total,\n            user:res.issues[0].fields.assignee.name,\n            timeOriginalEstimate:timeOriginalEstimate/3600,\n            storyPoint:storyPoint,\n            timeEstimate:timeEstimate/3600,\n            timeSpent:timeSpent/3600\n            // issueLength:res.issue.length()\n        }\n         array.push(obj);\n        console.log(\"pushed array : \",array);\n        this.setState({actualData:[...this.state.actualData,array]});\n        if(this.state.data.length-1 == this.state.actualData.length-1){\n          resolve(array);\n        }\n        \n      }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n      }  \n        })\n      \n\n    }\n        // if(arrayOfUsers.length == 5){\n        //   for(let i=0;i<5;i++){\n        //     const anotherApi =  FetchApi.callApi(`${url}/rest/api/3/search?jql=assignee=${arrayOfUsers[i]}`);\n        //     anotherApi.then(response => {\n        //       console.log(\"response : \",response);\n        //     })\n        //   }\n         \n        // }\n         \n        \n        \n        \n    // <FetchApi url='https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC'/>\n    //url ={'https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC'}/>\n  //   // superagent\n  //   // .get(`https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC`)\n  //   // .set('Access-Control-Allow-Credentials', '*')\n  //   // .set('Accept', 'application/json')\n  //   // .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n   \n  //   console.log(\"response : \",response.body.length);\n  //   for(let i=0;i<response.body.length;i++){\n  //     arrayOfUsers.push(response.body[i].key);\n      \n  //   }\n  //   console.log(\"array : \",arrayOfUsers);\n    \n  //   for(let i=0;i<arrayOfUsers.length;i++){\n  //     const re = await \n  //     superagent\n  //     .get(`https://madhvi.atlassian.net/rest/api/3/search?jql=assignee=${arrayOfUsers[i]}`)\n  //     .set('Access-Control-Allow-Credentials', '*')\n  //     .set('Accept', 'application/json')\n  //     .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n     \n  //     .end((err, res) => {\n  //       if (err) { return console.log(\"error : \",err); }\n  //       console.log(\"url 2 \");\n  //     let timeOriginalEstimate = 0;\n  //     let storyPoint=0;\n  //     let timeEstimate=0;\n  //     let timeSpent=0;\n  //     let count = res.total;\n  //     for(let i =0;i<count ;i++){\n  //         storyPoint =storyPoint +  res.issues[i].fields.customfield_10024;\n  //         timeEstimate = timeEstimate + res.issues[i].fields.timeestimate;\n  //         timeSpent = timeSpent + res.issues[i].fields.timespent;\n  //         timeOriginalEstimate = timeOriginalEstimate + res.issues[i].fields.timeoriginalestimate;\n  //     }\n      \n  //    obj ={\n  //         total : res.total,\n  //         user:res.issues[0].fields.assignee.name,\n  //         timeOriginalEstimate:timeOriginalEstimate/3600,\n  //         storyPoint:storyPoint,\n  //         timeEstimate:timeEstimate/3600,\n  //         timeSpent:timeSpent/3600\n  //         // issueLength:res.issue.length()\n  //     }\n  //     dataOfUsers.push(obj);\n  //     })\n  //   }\n  //   //this.setState({actualData:obj});\n    \n  //   this.setState({actualData:dataOfUsers});\n  //   console.log(\"this.state.actualData : \", this.state.actualData);\n   \n  // }\n\n  // getKeys=() => {\n  //   console.log(\"get \");\n  \n\n  render(){\n    debugger;\n    let posts = <table>\n    \n    {/* <tr>\n      <th>{this.getKeys()}</th>\n    </tr> */}\n    {this.state.actualData.map(id => (\n      <tr>\n         <td><b>{id.user}</b></td>\n         <td><b>{id.timeOriginalEstimate}</b></td>\n         <td><b>{id.timeEstimate}</b></td>\n         <td><b>{id.storyPoint}</b></td>\n         <td><b>{id.timeSpent}</b></td>\n         <td><b>{id.total}</b></td>\n      </tr>\n       \n    ))}\n  \n  </table>\n    return(\n      <>\n  <h1>Show</h1>\n  {posts}\n      \n      </>\n\n    )\n  }\n}\n\n\nexport default Fetch;"]},"metadata":{},"sourceType":"module"}