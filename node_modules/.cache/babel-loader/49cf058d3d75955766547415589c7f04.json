{"ast":null,"code":"\"use strict\";\n\nmodule.exports = ApplicationPropertiesClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/application-properties'\r\n * @constructor ApplicationPropertiesClient\r\n * @param {JiraClient} jiraClient\r\n */\n\nfunction ApplicationPropertiesClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Gets an application property.\r\n   * @method getProperties\r\n   * @memberOf ApplicationPropertiesClient#\r\n   * @param {Object} [opts] The options used to make the request.\r\n   * @param {string} [opts.key] A String containing the property key.\r\n   * @param {string} [opts.permissionLevel] When fetching a list specifies the permission level of all items in the list.\r\n   * @param {string} [opts.keyFilter] When fetching a list allows the list to be filtered by the property's start of key e.g.\r\n   *     \"jira.lf.*\" whould fetch only those permissions that are editable and whose keys start with \"jira.lf.\". This\r\n   *     is a regex\r\n   * @param {callback} [callback] Called when the properties are retrieved.\r\n   * @return {Promise} Resolved when the properties are retrieved.\r\n   */\n\n  this.getProperties = function (opts, callback) {\n    var qs = {};\n\n    if (opts) {\n      if (opts.key) {\n        qs.key = opts.key;\n      }\n\n      if (opts.keyFilter) {\n        qs.keyFilter = opts.keyFilter;\n      }\n\n      if (opts.permissionLevel) {\n        qs.keyFilter = opts.permissionLevel;\n      }\n    }\n\n    var options = {\n      uri: this.jiraClient.buildURL('/application-properties'),\n      method: 'GET',\n      followAllRedirects: true,\n      qs: qs\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n  /**\r\n   * Modify an application property via PUT. The \"value\" field present in the PUT will override thee existing value.\r\n   *\r\n   * @method getProperties\r\n   * @memberOf ApplicationPropertiesClient#\r\n   * @param {Object} opts The options for modifying the application property.\r\n   * @param opts.id The id of the property to be modified\r\n   * @param opts.property The new data for the property.  See\r\n   *     {@link https://docs.atlassian.com/jira/REST/latest/#d2e4891}\r\n   * @param [callback] Called when the property has been modified\r\n   * @return {Promise} Resolved when the property has been modified\r\n   */\n\n\n  this.setProperty = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/application-properties'),\n      method: 'GET',\n      followAllRedirects: true,\n      body: opts.property\n    };\n    return this.jiraClient.makeRequest(options, callback, 'Property Updated');\n  };\n}","map":null,"metadata":{},"sourceType":"script"}