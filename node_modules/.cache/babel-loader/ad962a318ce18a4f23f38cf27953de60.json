{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch2.js\";\nimport React from 'react';\nimport FetchApi from '../utility/fetchApi';\nimport FetchTable from '../utility/fetchTable';\n\nclass Fetch2 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      actualData: [],\n      length: ''\n    };\n\n    this.componentDidMount = async () => {\n      const data1 = await this.data();\n      console.log(\"DATA 1 ===>>>\", data1);\n      const data2 = await this.data2();\n      console.log(\"Data 2  => \", data2);\n      console.log(\"updated array : \", this.state.actualData); // const data3 = await this.tableData();\n      // console.log(data3);\n    };\n\n    this.tableData = () => {\n      FetchTable.tableHeader(this.state.data);\n    };\n\n    this.data = () => {\n      return new Promise((resolve, reject) => {\n        let url = localStorage.getItem('url');\n        let arrayOfUsers = [];\n        FetchApi.callApi(\"\".concat(url, \"/rest/api/2/user/assignable/search?project=REAC\")).then(res => {\n          console.log(\"response : \", res);\n          console.log(res.length);\n\n          for (let i = 0; i < res.length; i++) {\n            arrayOfUsers.push(res[i].name);\n          }\n\n          this.setState({\n            data: arrayOfUsers\n          });\n          resolve(arrayOfUsers);\n        }).catch(error => {\n          console.log(\"error : \", error);\n          reject(error);\n        });\n      });\n    };\n\n    this.data2 = () => {\n      let url = localStorage.getItem('url');\n      let array = [];\n      return new Promise((resolve, reject) => {\n        for (let i = 0; i < this.state.data.length; i++) {\n          const api = FetchApi.callApi(\"\".concat(url, \"/rest/api/3/search?jql=assignee=\").concat(this.state.data[i]));\n          api.then(res => {\n            console.log(\"response after data fetching : \", res);\n            let inProgressStoryPointCount = 0;\n            let todoStoryPoint = 0;\n            let doneStoryPoint = 0;\n            let reviewStoryPoint = 0;\n            let openStoryPoint = 0;\n            let acceptedStoryPoint = 0;\n            let resolvedStoryPoint = 0;\n            let storyPoint = 0;\n            let count = res.total;\n\n            for (let i = 0; i < count; i++) {\n              storyPoint = storyPoint + res.issues[i].fields.customfield_10024;\n\n              if (res.issues[i].fields.status.name == \"In Progress\") {\n                inProgressStoryPointCount = inProgressStoryPointCount + res.issues[i].fields.customfield_10024; // progressSum = progressSum + inProgressStoryPointCount;\n                //totalArray.push(progressSum);\n                //console.log(\"sum : \",progressSum);\n              }\n\n              if (res.issues[i].fields.status.name == \"To Do\") {\n                todoStoryPoint = todoStoryPoint + res.issues[i].fields.customfield_10024; // todoSum = todoSum + todoStoryPoint;\n                // totalArray.push(todoSum);\n                // console.log(\"sum : \",todoSum);\n              }\n\n              if (res.issues[i].fields.status.name == \"Done\") {\n                doneStoryPoint = doneStoryPoint + res.issues[i].fields.customfield_10024; // doneSum = doneSum + doneStoryPoint;\n                // console.log(\"sum : \",doneSum);\n                // totalArray.push(doneSum);\n              }\n\n              if (res.issues[i].fields.status.name == \"Review\") {\n                reviewStoryPoint = reviewStoryPoint + res.issues[i].fields.customfield_10024; // reviewSum = reviewSum + reviewStoryPoint;\n                // console.log(\"sum : \",reviewSum);\n                // totalArray.push(reviewSum);\n              } //  if(res.body.issues[i].fields.status.name == \"Open\"){\n              //   openStoryPoint = openStoryPoint + res.body.issues[i].fields.customfield_10024;\n              // }\n\n\n              if (res.issues[i].fields.status.name == \"Accepted\") {\n                acceptedStoryPoint = acceptedStoryPoint + res.issues[i].fields.customfield_10024; // acceptedSum = acceptedSum + acceptedStoryPoint;\n                // console.log(\"sum : \",acceptedSum);\n                // totalArray.push(acceptedSum);\n              }\n\n              if (res.issues[i].fields.status.name == \"Resolved\") {\n                resolvedStoryPoint = resolvedStoryPoint + res.issues[i].fields.customfield_10024; // resolveSum = resolveSum + resolvedStoryPoint;\n                // console.log(\"sum : \",resolveSum);\n                // totalArray.push(resolveSum);\n              }\n            }\n\n            console.log(count);\n            let obj = {\n              assignee: res.issues[0].fields.assignee.name,\n              todo: todoStoryPoint,\n              //open_Story_Point:openStoryPoint,\n              accepted: acceptedStoryPoint,\n              in_Progress: inProgressStoryPointCount,\n              review: reviewStoryPoint,\n              resolved: resolvedStoryPoint,\n              done: doneStoryPoint,\n              storyPoint: storyPoint\n            };\n            this.setState({\n              actualData: [...this.state.actualData, obj]\n            });\n\n            if (this.state.data.length - 1 == this.state.actualData.length - 1) {\n              resolve(array);\n            } // });\n            // console.log(\"new Array : \",this.state.newArray);\n\n          }).catch(error => {\n            console.log(\"error : \", error);\n            reject(error);\n          });\n        }\n      });\n    };\n\n    this.lastTable = () => {\n      this.props.history.goBack();\n    };\n  }\n\n  render() {\n    debugger;\n    let posts;\n\n    if (this.state.actualData.length > 0) {\n      posts = React.createElement(React.Fragment, null, React.createElement(\"table\", {\n        class: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        class: \"thead-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, FetchTable.tableHeader(this.state.actualData))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, FetchTable.tableRow(this.state.actualData))), React.createElement(\"button\", {\n        onClick: this.lastTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Previous\"));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Story Points by Assignee and Status\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), posts);\n  }\n\n}\n\nexport default Fetch2;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch2.js"],"names":["React","FetchApi","FetchTable","Fetch2","Component","state","data","actualData","length","componentDidMount","data1","console","log","data2","tableData","tableHeader","Promise","resolve","reject","url","localStorage","getItem","arrayOfUsers","callApi","then","res","i","push","name","setState","catch","error","array","api","inProgressStoryPointCount","todoStoryPoint","doneStoryPoint","reviewStoryPoint","openStoryPoint","acceptedStoryPoint","resolvedStoryPoint","storyPoint","count","total","issues","fields","customfield_10024","status","obj","assignee","todo","accepted","in_Progress","review","resolved","done","lastTable","props","history","goBack","render","posts","tableRow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FetchApi from '../utility/fetchApi';\nimport FetchTable from '../utility/fetchTable';\n\nclass Fetch2 extends React.Component{\n\n  state={\n        data:[],\n        actualData:[],\n        length:''\n  }\n\n \n     componentDidMount =async()=>{ \n\n    const data1 = await this.data();\n    console.log(\"DATA 1 ===>>>\", data1);\n    const data2 = await this.data2();\n    console.log(\"Data 2  => \",data2);\n    console.log(\"updated array : \",this.state.actualData);\n    // const data3 = await this.tableData();\n    // console.log(data3);\n  \n    }\n\n    tableData=()=>{\n      FetchTable.tableHeader(this.state.data);\n    }\n\n    data =() =>{\n     return new Promise( (resolve, reject) => {\n      let url = localStorage.getItem('url');\n      let arrayOfUsers = [];\n      \n      FetchApi.callApi(`${url}/rest/api/2/user/assignable/search?project=REAC`).then(res => {\n        console.log(\"response : \",res);\n        console.log(res.length);\n        for(let i=0;i<res.length;i++){\n              arrayOfUsers.push(res[i].name);\n            \n            }\n            \n            this.setState({data : arrayOfUsers});\n            resolve(arrayOfUsers);\n            \n      \n      }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n\n     } )\n    }\n\n    data2=()=>{\n      let url = localStorage.getItem('url');\n      let array = [];\n      return new Promise( (resolve, reject) => {\n\n      for(let i=0;i<this.state.data.length;i++){\n        const api = FetchApi.callApi(`${url}/rest/api/3/search?jql=assignee=${this.state.data[i]}`);\n      api.then(res => {\n        console.log(\"response after data fetching : \",res);\n        let inProgressStoryPointCount=0;\n                let todoStoryPoint=0;\n                let doneStoryPoint=0;\n                let reviewStoryPoint=0;\n                let openStoryPoint=0;\n                let acceptedStoryPoint=0;\n                let resolvedStoryPoint=0;\n                \n                let storyPoint=0;\n                let count = res.total;\n                for(let i =0;i<count ;i++){\n                  storyPoint =storyPoint +  res.issues[i].fields.customfield_10024;\n                  \n                    if(res.issues[i].fields.status.name == \"In Progress\"){\n                        inProgressStoryPointCount = inProgressStoryPointCount + res.issues[i].fields.customfield_10024;\n                       // progressSum = progressSum + inProgressStoryPointCount;\n                        //totalArray.push(progressSum);\n                        //console.log(\"sum : \",progressSum);\n                      }\n                    \n                     if(res.issues[i].fields.status.name == \"To Do\"){\n                        todoStoryPoint = todoStoryPoint + res.issues[i].fields.customfield_10024;\n                        // todoSum = todoSum + todoStoryPoint;\n                        // totalArray.push(todoSum);\n                        // console.log(\"sum : \",todoSum);\n                      }\n                    \n                      if(res.issues[i].fields.status.name == \"Done\"){\n                        doneStoryPoint = doneStoryPoint + res.issues[i].fields.customfield_10024;\n                        // doneSum = doneSum + doneStoryPoint;\n                        // console.log(\"sum : \",doneSum);\n                        // totalArray.push(doneSum);\n                      }\n                    \n                       if(res.issues[i].fields.status.name == \"Review\"){\n                        reviewStoryPoint = reviewStoryPoint + res.issues[i].fields.customfield_10024;\n                        // reviewSum = reviewSum + reviewStoryPoint;\n                        // console.log(\"sum : \",reviewSum);\n                        // totalArray.push(reviewSum);\n                      }\n                    \n                      //  if(res.body.issues[i].fields.status.name == \"Open\"){\n                      //   openStoryPoint = openStoryPoint + res.body.issues[i].fields.customfield_10024;\n                      // }\n                    \n                       if(res.issues[i].fields.status.name == \"Accepted\"){\n                        acceptedStoryPoint = acceptedStoryPoint + res.issues[i].fields.customfield_10024;\n                        // acceptedSum = acceptedSum + acceptedStoryPoint;\n                        // console.log(\"sum : \",acceptedSum);\n                        // totalArray.push(acceptedSum);\n                      }\n                    \n                       if(res.issues[i].fields.status.name == \"Resolved\"){\n                        resolvedStoryPoint = resolvedStoryPoint + res.issues[i].fields.customfield_10024;\n                        // resolveSum = resolveSum + resolvedStoryPoint;\n                        // console.log(\"sum : \",resolveSum);\n                        // totalArray.push(resolveSum);\n                      }\n\n                }\n                console.log(count);\n\n               \n                let obj ={\n                    \n                    assignee:res.issues[0].fields.assignee.name,\n                    todo:todoStoryPoint,\n                    //open_Story_Point:openStoryPoint,\n                    accepted:acceptedStoryPoint,\n                    in_Progress:inProgressStoryPointCount,\n                    review:reviewStoryPoint,\n                    resolved:resolvedStoryPoint,  \n                    done:doneStoryPoint,\n\n                    storyPoint:storyPoint\n                    \n                }\n                this.setState({actualData:[...this.state.actualData,obj]});\n                if(this.state.data.length-1 == this.state.actualData.length-1){\n          resolve(array);\n        }\n                // });\n                // console.log(\"new Array : \",this.state.newArray);\n        \n      }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n      }  \n        })\n      \n\n    }\n    \n    lastTable=()=>{\n        this.props.history.goBack();\n    }\n   \n   \n  render(){\n    debugger;\n    let posts ;\n    if(this.state.actualData.length > 0) {\n      posts =   <>\n        <table class=\"table\">\n          <thead class=\"thead-dark\">\n            <tr>\n              {FetchTable.tableHeader(this.state.actualData)}\n            </tr>\n          </thead>\n          <tbody>\n              {FetchTable.tableRow(this.state.actualData)}\n          </tbody>\n        </table> \n\n        <button onClick={this.lastTable}>Previous</button>\n        \n        </>\n    }\n  \n  return(\n      <>\n  <h1>Story Points by Assignee and Status</h1>\n  <br />\n  {posts}\n      \n      </>\n\n    )\n  }\n}\n\n\nexport default Fetch2;\n"]},"metadata":{},"sourceType":"module"}