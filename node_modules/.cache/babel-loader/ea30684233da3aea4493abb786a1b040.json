{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/chart.js\";\nimport React, { PureComponent } from 'react';\nimport { PieChart, Pie, Cell } from 'recharts'; //import Axios from '../../axios-orders';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#0088FE', '#00C49F'];\nconst RADIAN = Math.PI / 180;\nexport default class Chart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n\n    this.renderCustomizedLabel = ({\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      percent,\n      index\n    }) => {\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n      return React.createElement(\"text\", {\n        x: x,\n        y: y,\n        fill: \"white\",\n        textAnchor: x > cx ? 'start' : 'end',\n        dominantBaseline: \"central\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"\".concat(x, \"%\"));\n    };\n\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"this.state.array : \", this.props.data);\n    console.log(\"keys : \", Object.values(this.props.data));\n    let s = Object.keys(this.props.data);\n    this.setState({\n      array: s.map(key => {\n        return {\n          value: this.props.data[key]\n        };\n      })\n    }); // console.log(\"actaul array : \",s);\n    //this.chartForAuthor();\n  }\n\n  render() {\n    console.log('state.arr', this.state.array);\n    return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.props.count), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.props.count2), React.createElement(PieChart, {\n      width: 400,\n      height: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Pie, {\n      data: this.state.array,\n      cx: 300,\n      cy: 200,\n      labelLine: false,\n      label: this.renderCustomizedLabel,\n      outerRadius: 80,\n      fill: \"#8884d8\",\n      dataKey: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.array.map((entry, index) => React.createElement(Cell, {\n      key: \"cell-\".concat(index),\n      fill: COLORS[index % COLORS.length],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/chart.js"],"names":["React","PureComponent","PieChart","Pie","Cell","COLORS","RADIAN","Math","PI","Chart","constructor","props","state","array","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","componentDidMount","console","log","data","Object","values","s","keys","setState","map","key","value","render","count","count2","entry","length"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport {PieChart,Pie,Cell} from 'recharts'\n//import Axios from '../../axios-orders';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042','#0088FE','#00C49F'];\nconst RADIAN = Math.PI / 180;\n\nexport default class Chart extends PureComponent {\n\n    state={\n        array:[]\n    }\n\t\n    constructor(props){\n        super(props);\n        this.state = {\n            array:[]\n        }\n    }\n\n\tcomponentDidMount(){\n            console.log(\"this.state.array : \",this.props.data);\n            \n            console.log(\"keys : \",Object.values(this.props.data));\n\t\t\tlet s = Object.keys(this.props.data)\n\t\t\tthis.setState({array : s.map((key) => { return { value :this.props.data[key] }})});\n            // console.log(\"actaul array : \",s);\n\t\t//this.chartForAuthor();\n\t\n    }\n    \n    renderCustomizedLabel = ({\n\t\tcx, cy, midAngle, innerRadius, outerRadius, percent, index,\n\t}) => {\n\t\tconst radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n\t\tconst x = cx + radius * Math.cos(-midAngle * RADIAN);\n\t\tconst y = cy + radius * Math.sin(-midAngle * RADIAN);\n\t\n\t\treturn (\n\t\t\t<text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n\t\t\t\t{`${x}%`}\n\t\t\t</text>\n\t\t);\n\t};\n\t\n\trender() {\n\t\tconsole.log('state.arr', this.state.array)\n\t\treturn (\n            <>\n            <p>{this.props.count}</p>\n            <p>{this.props.count2}</p>\n\t\t\t\n\t\t\t<PieChart width={400} height={400}>\n\t\t\t<Pie\n\t\t\t\tdata={this.state.array}\n\t\t\t\tcx={300}\n\t\t\t\tcy={200}\n\t\t\t\tlabelLine={false}\n\t\t\t\tlabel={this.renderCustomizedLabel}\n\t\t\t\touterRadius={80}\n\t\t\t\tfill=\"#8884d8\"\n\t\t\t\tdataKey=\"value\"\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tthis.state.array.map((entry, index) =>\n\t\t\t\t\t<Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} ></Cell>)\n\t\t\t\t}\n\t\t\t</Pie>\n\t\t</PieChart> \n\t\t\t \n\t\t\t \n            </>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}