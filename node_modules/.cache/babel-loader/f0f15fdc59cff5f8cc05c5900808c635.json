{"ast":null,"code":"\"use strict\";\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nmodule.exports = AuthClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/auth/1/session'\r\n *\r\n * @param {JiraClient} jiraClient\r\n * @constructor UserClient\r\n */\n\nfunction AuthClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Logs the current user out of JIRA, destroying the existing session, if any.\r\n   *\r\n   * @method logout\r\n   * @memberOf Auth#\r\n   * @param [callback] Called when the user has been logged out.\r\n   * @return {Promise} Resolved when the user has been logged out.\r\n   */\n\n  this.logout = function (callback) {\n    var options = {\n      uri: this.jiraClient.buildAuthURL('/session'),\n      method: 'DELETE',\n      json: true,\n      followAllRedirects: true\n    };\n    return this.jiraClient.makeRequest(options, callback, 'User logged out.');\n  };\n  /**\r\n   * Creates a new session for a user in JIRA.\r\n   *\r\n   * @method login\r\n   * @memberOf Auth#\r\n   * @param opts The request options sent to the Jira API\r\n   * @param opts.username The name of the user to login.\r\n   * @param opts.password The password of the user.\r\n   * @param [callback] Called when the user has been logged in.\r\n   * @return {Promise} Resolved when the user has been logged in.\r\n   */\n\n\n  this.login = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildAuthURL('/session'),\n      method: 'POST',\n      json: true,\n      followAllRedirects: true,\n      body: opts\n    };\n    return this.jiraClient.makeRequest(options, callback, 'User logged in.');\n  };\n  /**\r\n   * Get current User. Returns information about the currently authenticated user's session.\r\n   *\r\n   * @method currentUser\r\n   * @memberOf Auth#\r\n   * @param [callback] Called when the current user has been retrieved.\r\n   * @return {Promise} Resolved when the user has been retrieved.\r\n   */\n\n\n  this.currentUser = function (callback) {\n    var options = {\n      uri: this.jiraClient.buildAuthURL('/session'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}