{"ast":null,"code":"\"use strict\";\n\nmodule.exports = GroupsClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/groups'\r\n *\r\n * @param {JiraClient} jiraClient\r\n * @constructor GroupsClient\r\n */\n\nfunction GroupsClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Returns groups with substrings matching a given query. This is mainly for use with the group picker, so the\r\n   * returned groups contain html to be used as picker suggestions. The groups are also wrapped in a single response\r\n   * object that also contains a header for use in the picker, specifically Showing X of Y matching groups. The\r\n   * number of groups returned is limited by the system property \"jira.ajax.autocomplete.limit\" The groups will be\r\n   * unique and sorted.\r\n   *\r\n   * @method findGroups\r\n   * @memberOf GroupsClient#\r\n   * @param {Object} opts The request options to use in the Jira API.\r\n   * @param {string} opts.query A string against which to match groups.  Leave this blank to return all groups.\r\n   * @param {string} opts.exclude A string specifying groups to exclude.\r\n   * @param {number} opts.maxResults The maximum number of results to return.\r\n   * @param [callback] Called when the groups have been retrieved.\r\n   * @return {Promise} Resolved when the groups have been retrieved.\r\n   */\n\n  this.findGroups = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/groups/picker'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true,\n      qs: {\n        query: opts.query,\n        exclude: opts.exclude,\n        maxResults: opts.maxResults\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}