{"ast":null,"code":"\"use strict\";\n\nmodule.exports = ResolutionClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/resolution'\r\n *\r\n * @param {JiraClient} jiraClient\r\n * @constructor ResolutionClient\r\n */\n\nfunction ResolutionClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Returns a list of all resolutions visible to the user\r\n   *\r\n   * @method getAllResolutions\r\n   * @memberOf ResolutionClient#\r\n   * @param opts Ignored\r\n   * @param [callback] Called when the resolutions have been retrieved.\r\n   * @return {Promise} Resolved when the resolutions have been retrieved.\r\n   */\n\n  this.getAllResolutions = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/resolution'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n  /**\r\n   * Get a full representation of the resolution that has the given id.\r\n   *\r\n   * @method getResolution\r\n   * @memberOf ResolutionClient#\r\n   * @param opts The options sent to the Jira API\r\n   * @param opts.resolutionId A String containing a resolution id\r\n   * @param [callback] Called when the resolution has been retrieved.\r\n   * @return {Promise} Resolved when the resolution has been retrieved.\r\n   */\n\n\n  this.getResolution = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/resolution/' + opts.resolutionId),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}