{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchTable.js\";\nimport React from 'react';\nexport default {\n  tableHeader: props => {\n    let o = Object.keys(props[0]);\n    return o.map(key => {\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  },\n  tableRow: props => {\n    let propsData = props;\n    let rowData = Object.values(props[0]);\n    return propsData.map((row, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(RenderRow, {\n        key: propsData,\n        data: row,\n        rowData: rowData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      })); // <tr>{ Object.values(row)}</tr>\n    });\n  },\n  RenderRow: props => {\n    return props.keys.map((key, index) => {\n      return React.createElement(\"td\", {\n        key: props.data[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, props.data[key]);\n    });\n  }\n};","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchTable.js"],"names":["React","tableHeader","props","o","Object","keys","map","key","toUpperCase","tableRow","propsData","rowData","values","row","index","RenderRow","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AAEXC,EAAAA,WAAW,EAAGC,KAAD,IAAW;AACpB,QAAIC,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAAC,CAAD,CAAjB,CAAR;AACA,WAAOC,CAAC,CAACG,GAAF,CAAOC,GAAD,IAAO;AACZ,aAAO;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeA,GAAG,CAACC,WAAJ,EAAf,CAAP;AACC,KAFF,CAAP;AAGH,GAPU;AASXC,EAAAA,QAAQ,EAAGP,KAAD,IAAU;AACZ,QAAIQ,SAAS,GAAGR,KAAhB;AACA,QAAIS,OAAO,GAAGP,MAAM,CAACQ,MAAP,CAAcV,KAAK,CAAC,CAAD,CAAnB,CAAd;AACA,WAAOQ,SAAS,CAACJ,GAAV,CAAc,CAACO,GAAD,EAAKC,KAAL,KAAa;AAC9B,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEJ,SAAhB;AAA2B,QAAA,IAAI,EAAEG,GAAjC;AAAsC,QAAA,OAAO,EAAEF,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,CAAP,CAD8B,CAE9B;AACC,KAHE,CAAP;AAKP,GAjBU;AAmBVI,EAAAA,SAAS,EAAEb,KAAD,IAAU;AACjB,WAAOA,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMO,KAAN,KAAc;AACpC,aAAO;AAAI,QAAA,GAAG,EAAEZ,KAAK,CAACc,IAAN,CAAWT,GAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BL,KAAK,CAACc,IAAN,CAAWT,GAAX,CAA3B,CAAP;AACC,KAFM,CAAP;AAGA;AAvBO,CAAf","sourcesContent":["import React from 'react';\nexport default {\n\n    tableHeader: (props) => {\n        let o = Object.keys(props[0]);\n        return o.map((key)=>{\n                return <th key={key}>{key.toUpperCase()}</th>\n                })\n    },\n    \n    tableRow: (props) =>{\n            let propsData = props;\n            let rowData = Object.values(props[0]);\n            return propsData.map((row,index)=>{\n                return <tr key={index}><RenderRow key={propsData} data={row} rowData={rowData}/></tr>\n                // <tr>{ Object.values(row)}</tr>\n                })\n        \n    },\n\n     RenderRow:(props) =>{\n        return props.keys.map((key, index)=>{\n        return <td key={props.data[key]}>{props.data[key]}</td>\n        })\n       }\n\n}\n"]},"metadata":{},"sourceType":"module"}