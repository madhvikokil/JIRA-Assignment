{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js\";\nimport React from 'react';\nimport FetchApi from '../utility/fetchApi';\nimport FetchTable from '../utility/tableData';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport './fetch.css';\n\nclass Fetch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      actualData: [],\n      length: '',\n      total: []\n    };\n\n    this.componentDidMount = async () => {\n      const data1 = await this.data();\n      console.log(\"DATA 1 ===>>>\", data1);\n      const data2 = await this.data2();\n      console.log(\"Data 2  => \", data2);\n      console.log(\"updated array : \", this.state.actualData);\n    };\n\n    this.tableData = () => {\n      FetchTable.tableHeader(this.state.data);\n    };\n\n    this.data = () => {\n      return new Promise((resolve, reject) => {\n        let url = localStorage.getItem('url');\n        let arrayOfUsers = [];\n        FetchApi.callApi(\"\".concat(url, \"/rest/api/2/user/assignable/search?project=REAC\")).then(res => {\n          console.log(\"response : \", res);\n          console.log(res.length);\n\n          for (let i = 0; i < res.length; i++) {\n            arrayOfUsers.push(res[i].name);\n          }\n\n          this.setState({\n            data: arrayOfUsers\n          });\n          resolve(arrayOfUsers);\n        }).catch(error => {\n          console.log(\"error : \", error);\n          reject(error);\n        });\n      });\n    };\n\n    this.data2 = () => {\n      let url = localStorage.getItem('url');\n      let array = [];\n      return new Promise((resolve, reject) => {\n        for (let i = 0; i < this.state.data.length; i++) {\n          const api = FetchApi.callApi(\"\".concat(url, \"/rest/api/3/search?jql=assignee=\").concat(this.state.data[i]));\n          api.then(res => {\n            console.log(\"response after data fetching : \", res);\n            let timeOriginalEstimate = 0;\n            let storyPoint = 0;\n            let timeEstimate = 0;\n            let timeSpent = 0;\n            let count = res.total;\n            let issueCountSum = 0;\n            let storyPointSum = 0;\n            let originalSum = 0;\n            let remainingSum = 0;\n            let spentSum = 0;\n\n            for (let i = 0; i < count; i++) {\n              if (res.issues[i].fields.project.key == 'REAC') {\n                storyPoint = storyPoint + res.issues[i].fields.customfield_10024;\n                timeEstimate = timeEstimate + res.issues[i].fields.timeestimate;\n                timeSpent = timeSpent + res.issues[i].fields.timespent;\n                timeOriginalEstimate = timeOriginalEstimate + res.issues[i].fields.timeoriginalestimate; // console.log(\"isues of a project : \",res.issues[i].fields.project.key);\n\n                console.log(\"name of the user' : \", res.issues[i].fields.assignee.name); //console.log(\"name of the user' : \",res.issues[i].fields.assignee.name.length);\n\n                console.log(\"count : \", count);\n              }\n            }\n\n            let value = Math.floor(timeSpent / 3600);\n            let value2 = Math.floor(timeOriginalEstimate / 3600);\n            let value3 = Math.floor(timeEstimate / 3600);\n            let obj = {\n              user: res.issues[0].fields.assignee.name,\n              issue_count: res.total,\n              story_Point: storyPoint,\n              Original_Estimate: value2,\n              remaining_Estimate: value3,\n              time_Spent: value\n            };\n            console.log(\"pushed array : \", array);\n            this.setState({\n              actualData: [...this.state.actualData, obj]\n            });\n\n            if (this.state.data.length - 1 == this.state.actualData.length - 1) {\n              for (let i = 0; i < this.state.actualData.length; i++) {\n                issueCountSum = issueCountSum + this.state.actualData[i].issue_count;\n                storyPointSum = storyPointSum + this.state.actualData[i].story_Point;\n                originalSum = originalSum + this.state.actualData[i].Original_Estimate;\n                remainingSum = remainingSum + this.state.actualData[i].remaining_Estimate;\n                spentSum = spentSum + this.state.actualData[i].time_Spent;\n              }\n\n              let obj2 = {\n                issueCountSum: issueCountSum,\n                storyPointSum: storyPointSum,\n                originalSum: originalSum,\n                remainingSum: remainingSum,\n                spentSum: spentSum\n              };\n              this.setState({\n                totalCount: obj2\n              }); //console.log(...obj2);\n\n              localStorage.setItem('issuecount', JSON.stringify(obj2));\n              let s = JSON.parse(localStorage.getItem('issuecount'));\n              console.log(\"s : \", s);\n              console.log(\"get Item : \", s.issueCountSum);\n              resolve(array);\n            }\n          }).catch(error => {\n            console.log(\"error : \", error);\n            reject(error);\n          });\n        }\n      });\n    };\n\n    this.anotherTable = () => {\n      console.log(\"Next Table\");\n      this.props.history.push(\"/tableSheet/table2\");\n    };\n\n    this.logoutHandler = () => {\n      console.log(\"logout\");\n    };\n\n    this.progressBar = () => {\n      console.log(\"progress bar\");\n      let issueCountTotal = 100;\n      let refValue = 60;\n      let di = refValue * 100 / issueCountTotal;\n      let a = di + '%';\n      console.log(di + '%');\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        class: \"progress\",\n        width: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"progress-bar\",\n        style: {\n          width: a\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, a)));\n    };\n  }\n\n  render() {\n    debugger;\n    let posts;\n\n    if (this.state.actualData.length > 0) {\n      posts = React.createElement(React.Fragment, null, React.createElement(\"table\", {\n        class: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        class: \"thead-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, FetchTable.tableHeader(this.state.actualData))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, FetchTable.tableRow(this.state.actualData, this.state.totalCount)), this.state.totalCount ? React.createElement(\"tfoot\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Total \"), \" \", FetchTable.tableFooter(this.state.totalCount, 'table1'))) : null), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Release Multiple Output Statistics\"), React.createElement(Button, {\n      class: \"ui right floated  button\",\n      as: Link,\n      to: \"/logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Log out\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), posts, React.createElement(Button, {\n      onClick: this.anotherTable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \" Next >> \"));\n  }\n\n}\n\nexport default Fetch;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js"],"names":["React","FetchApi","FetchTable","Link","Button","Fetch","Component","state","data","actualData","length","total","componentDidMount","data1","console","log","data2","tableData","tableHeader","Promise","resolve","reject","url","localStorage","getItem","arrayOfUsers","callApi","then","res","i","push","name","setState","catch","error","array","api","timeOriginalEstimate","storyPoint","timeEstimate","timeSpent","count","issueCountSum","storyPointSum","originalSum","remainingSum","spentSum","issues","fields","project","key","customfield_10024","timeestimate","timespent","timeoriginalestimate","assignee","value","Math","floor","value2","value3","obj","user","issue_count","story_Point","Original_Estimate","remaining_Estimate","time_Spent","obj2","totalCount","setItem","JSON","stringify","s","parse","anotherTable","props","history","logoutHandler","progressBar","issueCountTotal","refValue","di","a","width","render","posts","tableRow","tableFooter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FetchApi from '../utility/fetchApi';\nimport FetchTable from '../utility/tableData';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\nimport './fetch.css';\n\n\nclass Fetch extends React.Component{\n\n  state={\n        data:[],\n        actualData:[],\n        length:'',\n        total:[]\n  }\n\n \n     componentDidMount =async()=>{ \n\n    const data1 = await this.data();\n    console.log(\"DATA 1 ===>>>\", data1);\n    const data2 = await this.data2();\n    console.log(\"Data 2  => \",data2);\n    console.log(\"updated array : \",this.state.actualData);\n  \n    }\n\n    tableData=()=>{\n      FetchTable.tableHeader(this.state.data);\n    }\n\n    data =() =>{\n     return new Promise( (resolve, reject) => {\n      let url = localStorage.getItem('url');\n      let arrayOfUsers = [];\n      \n      FetchApi.callApi(`${url}/rest/api/2/user/assignable/search?project=REAC`).then(res => {\n        console.log(\"response : \",res);\n        console.log(res.length);\n        for(let i=0;i<res.length;i++){\n              arrayOfUsers.push(res[i].name);\n            \n            }\n            \n            this.setState({data : arrayOfUsers});\n            resolve(arrayOfUsers);\n            \n      \n      }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n\n     } )\n    }\n\n    data2=()=>{\n      let url = localStorage.getItem('url');\n      let array = [];\n      return new Promise( (resolve, reject) => {\n\n      for(let i=0;i<this.state.data.length;i++){\n        const api = FetchApi.callApi(`${url}/rest/api/3/search?jql=assignee=${this.state.data[i]}`);\n      api.then(res => {\n        console.log(\"response after data fetching : \",res);\n        let timeOriginalEstimate = 0;\n        let storyPoint=0;\n        let timeEstimate=0;\n        let timeSpent=0;\n        let count = res.total;\n        let issueCountSum = 0;\n        let storyPointSum = 0;\n        let originalSum = 0;\n        let remainingSum = 0;\n        let spentSum = 0;\n        for(let i =0;i<count ;i++){\n           if(res.issues[i].fields.project.key == 'REAC'){\n            storyPoint =storyPoint +  res.issues[i].fields.customfield_10024;\n            timeEstimate = timeEstimate + res.issues[i].fields.timeestimate;\n            timeSpent = timeSpent + res.issues[i].fields.timespent;\n            timeOriginalEstimate = timeOriginalEstimate + res.issues[i].fields.timeoriginalestimate;\n            // console.log(\"isues of a project : \",res.issues[i].fields.project.key);\n             console.log(\"name of the user' : \",res.issues[i].fields.assignee.name);\n             //console.log(\"name of the user' : \",res.issues[i].fields.assignee.name.length);\n             console.log(\"count : \",count);\n\n           }\n           \n        }\n        \n        let value = Math.floor(timeSpent/3600)\n        let value2 = Math.floor(timeOriginalEstimate/3600);\n        let value3 = Math.floor(timeEstimate/3600)\n        let obj ={\n            user:res.issues[0].fields.assignee.name,\n            issue_count : res.total,\n            story_Point:storyPoint,\n            Original_Estimate:value2,\n            remaining_Estimate:value3,\n            time_Spent:value\n            \n            \n        }\n       \n        console.log(\"pushed array : \",array);\n        this.setState({actualData:[...this.state.actualData,obj]});\n        if(this.state.data.length-1 == this.state.actualData.length-1){\n\n          for(let i=0;i<this.state.actualData.length;i++){\n            issueCountSum = issueCountSum + this.state.actualData[i].issue_count;\n             storyPointSum = storyPointSum + this.state.actualData[i].story_Point;\n            originalSum = originalSum + this.state.actualData[i].Original_Estimate;\n            remainingSum = remainingSum + this.state.actualData[i].remaining_Estimate;\n            spentSum = spentSum + this.state.actualData[i].time_Spent;\n          }\n          let obj2 = {\n              issueCountSum : issueCountSum,\n              storyPointSum : storyPointSum,\n              originalSum : originalSum,\n              remainingSum : remainingSum,\n              spentSum : spentSum\n          }\n          this.setState({totalCount:obj2});\n          //console.log(...obj2);\n          localStorage.setItem('issuecount',JSON.stringify(obj2));\n          let s = JSON.parse(localStorage.getItem('issuecount'));\n          console.log(\"s : \" ,s);\n         \n          console.log(\"get Item : \",s.issueCountSum);\n         \n          resolve(array);\n        }  \n             \n      }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n      }  \n        })\n      \n\n    }\n\n    anotherTable=()=>{\n      console.log(\"Next Table\");\n      this.props.history.push(\"/tableSheet/table2\");\n    }\n       \n  \n  logoutHandler=() =>{\n    console.log(\"logout\");\n  }\n\n  progressBar=() => {\n    console.log(\"progress bar\")\n    let issueCountTotal = 100;\n    let refValue = 60;\n    let di = refValue * 100 / issueCountTotal;\n    let a = di + '%';\n    console.log(di+'%');\n    return(<>\n      <div class=\"progress\" width=\"100\">\n          <span class=\"progress-bar\" style={{width:a}}>{a}</span>\n      </div></>\n    )\n  }\n  render(){\n    debugger;\n    let posts ;\n    if(this.state.actualData.length > 0) {\n      posts =   <>\n        <table class=\"table\">\n          <thead class=\"thead-dark\">\n            <tr>\n              {FetchTable.tableHeader(this.state.actualData)}\n              {/* {this.progressBar()} */}\n            </tr>\n          </thead>\n\n          <tbody>\n              {FetchTable.tableRow(this.state.actualData,this.state.totalCount)}\n          </tbody>\n          \n          {this.state.totalCount ? \n          <tfoot>\n         <tr><th>Total </th> {FetchTable.tableFooter(this.state.totalCount,'table1')}</tr>     \n         {/* <tr>{this.state.totalCount.storyPointSum} Issue Count </tr> */}\n      </tfoot>\n      : null\n          }\n          \n          \n        </table><hr/> \n      <br/>\n      \n        </>\n    }\n  \n  return(\n      <><br />\n  <h1>Release Multiple Output Statistics</h1>\n  <Button class=\"ui right floated  button\"  as={Link} to ='/logout'>Log out</Button>\n  <br /><br />\n  {posts}\n  <Button onClick={this.anotherTable}> Next >> </Button>\n  {/* {this.progressBar()} */}\n      \n      </>\n\n    )\n  }\n}\n\n\nexport default Fetch;"]},"metadata":{},"sourceType":"module"}