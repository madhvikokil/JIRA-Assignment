{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchBody.js\";\nimport React from 'react';\nexport default {\n  RenderRow: props => {\n    return props.keys.map((key, index) => {\n      return React.createElement(\"td\", {\n        key: props.data[key],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 5\n        },\n        __self: this\n      }, props.data[key]));\n    });\n  },\n  design: props => {},\n  RenderProgressRow: props => {\n    return props.keys.map((key, index) => {\n      if (typeof props.data[key] == 'string') {\n        return React.createElement(\"td\", {\n          key: props.data[key],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, props.data[key]));\n      }\n\n      if (typeof props.data[key] != 'string') {\n        if (key == 'issue_count') {\n          let bar = props.data[key] * 100 / props.item.issueCountSum;\n          bar = Math.floor(bar);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, props.data[key]), \"\\xA0\", React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, \"_\")), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, bar + '%'), \"\\xA0\");\n        }\n\n        if (key == 'story_Point') {\n          let bar = props.data[key] * 100 / props.item.storyPointSum;\n          bar = Math.floor(bar);\n          props.design(bar);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, props.data[key]), \"\\xA0\", React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, \"_\")), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, bar + '%'), \"\\xA0\");\n        }\n\n        if (key == 'Original_Estimate') {\n          let bar = props.data[key] * 100 / props.item.originalSum;\n          bar = Math.floor(bar);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, props.data[key]), \"\\xA0\", React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, \"_\")), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }, bar + '%'), \"\\xA0\");\n        }\n\n        if (key == 'remaining_Estimate') {\n          let bar = props.data[key] * 100 / props.item.remainingSum;\n          bar = Math.floor(bar);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, props.data[key]), \"\\xA0\", React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \"_\")), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, bar + '%'), \"\\xA0\");\n        }\n\n        if (key == 'time_Spent') {\n          let bar = props.data[key] * 100 / props.item.spentSum;\n          bar = Math.floor(bar);\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, props.data[key]), \"\\xA0\", React.createElement(\"div\", {\n            class: \"progress\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"inside\",\n            style: {\n              width: \"\".concat(bar) + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, \"_\")), React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, bar + '%'), \"\\xA0\");\n        }\n      }\n    });\n  }\n};\n{\n  /* <td key={key}><b>{key}</b>\n                 <div class=\"progress\">\n                     <div class=\"inside\"><span style={{display:'inline', width:30+'px' }}></span></div>                  \n                 </div><b>100%</b>\n                    \n         </td> */\n}\n{\n  /* <th key={key}>{key.toUpperCase()}</th> */\n}","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchBody.js"],"names":["React","RenderRow","props","keys","map","key","index","data","design","RenderProgressRow","bar","item","issueCountSum","Math","floor","width","storyPointSum","originalSum","remainingSum","spentSum"],"mappings":"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","sourcesContent":["import React from 'react';\nexport default{\n    RenderRow:(props)=>{\n        return props.keys.map((key, index)=>{\n        return <td key={props.data[key]}><b>{props.data[key]}</b></td>\n        })\n       },\n\n    design:(props)=>{\n\n    },\n\n    RenderProgressRow:(props) =>{\n        return props.keys.map((key, index)=>{\n            if(typeof props.data[key] == 'string'){\n                return <td key={props.data[key]}><b>{props.data[key]}</b></td>\n            }\n            if(typeof props.data[key] != 'string'){\n                if(key == 'issue_count') {\n                    let bar = props.data[key] * 100 / props.item.issueCountSum;\n                    bar = Math.floor(bar)\n                    return (<td key={props.data[key]}><b>{props.data[key]}</b>&nbsp;\n             <div class=\"progress\">\n                    <div class=\"inside\" style={{width:`${bar}`+'px'}}>_</div>                  \n                     </div><b>{bar+'%'}</b>&nbsp;\n                   </td>)\n                }\n\n                \n                    if(key == 'story_Point') {\n                        let bar = props.data[key] * 100 / props.item.storyPointSum;\n                        bar = Math.floor(bar);\n                        props.design(bar);\n                        return (<td key={props.data[key]}><b>{props.data[key]}</b>&nbsp;\n                 <div class=\"progress\">\n                        <div class=\"inside\" style={{width:`${bar}`+'px'}}>_</div>                  \n                         </div><b>{bar+'%'}</b>&nbsp;\n                       </td>)\n                    }\n\n                    if(key == 'Original_Estimate') {\n                        let bar = props.data[key] * 100 / props.item.originalSum;\n                        bar = Math.floor(bar)\n                        return (<td key={props.data[key]}><b>{props.data[key]}</b>&nbsp;\n                 <div class=\"progress\">\n                        <div class=\"inside\" style={{width:`${bar}`+'px'}}>_</div>                  \n                         </div><b>{bar+'%'}</b>&nbsp;\n                       </td>)\n                    }\n\n                    if(key == 'remaining_Estimate') {\n                        let bar = props.data[key] * 100 / props.item.remainingSum;\n                        bar = Math.floor(bar)\n                        return (<td key={props.data[key]}><b>{props.data[key]}</b>&nbsp;\n                 <div class=\"progress\">\n                        <div class=\"inside\" style={{width:`${bar}`+'px'}}>_</div>                  \n                        </div><b>{bar+'%'}</b>&nbsp;\n                       </td>)\n                    }\n                    \n                    if(key == 'time_Spent') {\n                        let bar = props.data[key] * 100 / props.item.spentSum;\n                        bar = Math.floor(bar)\n                        return (<td key={props.data[key]}><b>{props.data[key]}</b>&nbsp;\n                 <div class=\"progress\">\n                    <div class=\"inside\" style={{width:`${bar}`+'px'}}>_</div>                  \n                         </div><b>{bar+'%'}</b>&nbsp;\n                       </td>)\n                    }\n                \n                \n            }\n           \n            \n            })\n           }\n    }\n\n{/* <td key={key}><b>{key}</b>\n                <div class=\"progress\">\n                    <div class=\"inside\"><span style={{display:'inline', width:30+'px' }}></span></div>                  \n                </div><b>100%</b>\n                   \n        </td> */}\n\n\n{/* <th key={key}>{key.toUpperCase()}</th> */}"]},"metadata":{},"sourceType":"module"}