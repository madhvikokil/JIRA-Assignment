{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/tableData.js\";\nimport React from 'react';\nimport FetchBody from './fetchBody';\nimport './tableData.css';\nimport './tableEdit.css';\nexport default {\n  tableHeader: props => {\n    let headerLabelColor = {\n      0: \"#7a864a\",\n      1: \"#42526e\",\n      2: \"#42526e\",\n      3: \"#0747a6\",\n      4: \"#0747a6\",\n      5: \"#006644\",\n      6: \"#006644\",\n      7: \"#0052cc\"\n    };\n    let headerLabelBackgroundColor = {\n      5: \"#e3fcef\",\n      6: \"#e3fcef\",\n      3: \"#deebff\",\n      4: \"#deebff\"\n    };\n    let o = Object.keys(props[0]);\n    return o.map((key, index) => {\n      if (key == \"open\" || key == \"accepted\" || key == \"in_Progress\" || key == \"review\" || key == \"resolved\" || key == \"done\") {\n        let ReplacedKey = key.replace(/_/g, ' ');\n        return React.createElement(\"th\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          class: \"headerBox\",\n          style: {\n            color: \"\".concat(headerLabelColor[index]),\n            backgroundColor: \"\".concat(headerLabelBackgroundColor[index])\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, ReplacedKey.toUpperCase()));\n      }\n\n      if (key == \"story_point\") {\n        let ReplacedKey = key.replace(/_/g, ' ');\n        return React.createElement(\"th\", {\n          key: key,\n          style: {\n            color: '#0747a6',\n            backgroundColor: 'rgb(244,245,247)',\n            fontWeight: '800'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, ReplacedKey.toUpperCase());\n      }\n\n      if (key == 'user' || key == 'assignee') {\n        let ReplacedKey = key.replace('.', ' ');\n        return React.createElement(\"th\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, ReplacedKey.toUpperCase());\n      }\n    });\n  },\n  tableRow: (props, props2) => {\n    let items = props;\n    let item2 = props2;\n    let keys = Object.keys(props[0]);\n\n    if (item2) {\n      return items.map((row, index) => {\n        return React.createElement(\"tr\", {\n          class: \"editRow\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(FetchBody.RenderProgressRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          item: item2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return items.map((row, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(FetchBody.RenderRow, {\n        key: index,\n        data: row,\n        keys: keys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    });\n  },\n  tableFooter: (props, p) => {\n    let colorObject = {\n      0: '#42526e',\n      1: '#42526e',\n      2: '#654982',\n      3: \"#f15c75\",\n      4: \"#14892c\"\n    };\n    let o = Object.values(props);\n    let a = Object.keys(props);\n    console.log(\"footer :\", props);\n\n    if (p) {\n      return o.map((key, index) => React.createElement(\"td\", {\n        class: \"editRow\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, key), \"\\xA0\", React.createElement(\"div\", {\n        class: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"inside\",\n        style: {\n          width: 100 + 'px',\n          backgroundColor: \"\".concat(colorObject[index])\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"_\"), \"\\xA0\"), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"100%\")));\n    } else {\n      return o.map(key => React.createElement(\"td\", {\n        class: \"editRow\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, key)));\n    }\n  }\n};","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/tableData.js"],"names":["React","FetchBody","tableHeader","props","headerLabelColor","headerLabelBackgroundColor","o","Object","keys","map","key","index","ReplacedKey","replace","color","backgroundColor","toUpperCase","fontWeight","tableRow","props2","items","item2","row","tableFooter","p","colorObject","values","a","console","log","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FetchBody from './fetchBody';\nimport './tableData.css';\nimport './tableEdit.css';\nexport default {\n\n    tableHeader: (props) => {\n        let headerLabelColor={\n            0:\"#7a864a\",\n            1:\"#42526e\",\n            2:\"#42526e\",\n            3:\"#0747a6\",\n            4:\"#0747a6\",\n            5:\"#006644\",\n            6:\"#006644\",\n            7:\"#0052cc\"\n        }\n        let headerLabelBackgroundColor = {\n            5:\"#e3fcef\",\n            6:\"#e3fcef\",\n            3:\"#deebff\",\n            4:\"#deebff\"\n        }\n        \n        let o = Object.keys(props[0]);\n        return o.map((key,index)=>{\n             if(key == \"open\" || key == \"accepted\" || key == \"in_Progress\" || key == \"review\" || key ==\"resolved\" || key ==\"done\" ){\n                let ReplacedKey = key.replace(/_/g, ' ');\n                return <th key={key} ><td class=\"headerBox\" style={{color:`${headerLabelColor[index]}`,backgroundColor:`${headerLabelBackgroundColor[index]}`}}>{ReplacedKey.toUpperCase()}</td></th>\n             }\n             if(key == \"story_point\"){\n                let ReplacedKey = key.replace(/_/g, ' ');\n                return <th key={key} style={{color:'#0747a6',backgroundColor:'rgb(244,245,247)',fontWeight:'800'}}>{ReplacedKey.toUpperCase()}</th>\n             }\n             if(key == 'user' || key == 'assignee'){\n                let ReplacedKey = key.replace('.',' ');\n                return <th key={key}>{ReplacedKey.toUpperCase()}</th>\n             }\n        \n                })\n    },\n    \n    tableRow: (props,props2) =>{\n                  \n        let items = props;\n        let item2 = props2;\n        let keys = Object.keys(props[0]);\n        if(item2){\n            return items.map((row, index)=>{\n            return <tr class=\"editRow\" key={index}><FetchBody.RenderProgressRow key={index} data={row} keys={keys} item={item2} /></tr>\n            })\n        }\n        return items.map((row, index)=>{\n        return <tr key={index} ><FetchBody.RenderRow key={index} data={row} keys={keys} /></tr>\n        })\n    },\n\n    tableFooter: (props,p) =>{\n        let colorObject={\n            0:'#42526e',\n            1:'#42526e',\n            2:'#654982',\n            3:\"#f15c75\",\n            4:\"#14892c\"\n        }\n        let o = Object.values(props);\n        let a = Object.keys(props);\n        console.log(\"footer :\",props);\n        if(p){\n           \n         return o.map((key,index)=>(\n                   \n         <td class=\"editRow\" key={key}><b>{key}</b>&nbsp;\n                <div class=\"progress\">\n                <div class=\"inside\" style={{width:100+'px',backgroundColor:`${colorObject[index]}`}} >_</div>&nbsp;\n                </div><b>100%</b>\n        </td>))\n        }\n\n        else{\n            return o.map((key)=>(\n            <td class=\"editRow\" key={key}><b>{key}</b></td>))\n        }\n    }\n }\n"]},"metadata":{},"sourceType":"module"}