{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/tableData.js\";\nimport React from 'react';\nimport FetchBody from './fetchBody';\nimport './tableData.css';\nimport './tableEdit.css';\nexport default {\n  tableHeader: props => {\n    let o = Object.keys(props[0]);\n    return o.map(key => {\n      if (key == \"open\" || key == \"accepted\" || key == \"in_Progress\" || key == \"review\" || key == \"resolved\" || key == \"done\" || key == \"storyPoint\") {\n        return React.createElement(\"th\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          class: \"headerBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, key.toUpperCase()));\n      }\n\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  },\n  tableRow: (props, props2) => {\n    let items = props;\n    let item2 = props2;\n    let keys = Object.keys(props[0]);\n\n    if (item2) {\n      return items.map((row, index) => {\n        return React.createElement(\"tr\", {\n          class: \"editRow\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(FetchBody.RenderProgressRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          item: item2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return items.map((row, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(FetchBody.RenderRow, {\n        key: index,\n        data: row,\n        keys: keys,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    });\n  },\n  tableFooter: (props, p) => {\n    let o = Object.values(props);\n\n    if (p) {\n      let colors = '';\n\n      if (props.issue_count || props.in_Progress) {\n        return colors = \"#42526e\";\n      }\n\n      if (props.Original_Estimate_in_days) {\n        return colors = \"#42526e\";\n      }\n\n      if (props.remaining_Estimate_in_days) {\n        return colors = \"#654982\";\n      }\n\n      if (props == 'time_Spent_in_days') {\n        return colors = '#14892c';\n      }\n\n      return o.map(key => React.createElement(\"td\", {\n        class: \"editRow\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, key), \"\\xA0\", React.createElement(\"div\", {\n        class: \"progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"inside\",\n        style: {\n          width: 100 + 'px',\n          backgroundColor: \"\".concat(colors)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"_\"), \"\\xA0\"), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"100%\")));\n    } else {\n      return o.map(key => React.createElement(\"td\", {\n        class: \"editRow\",\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, key)));\n    }\n  }\n};","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/tableData.js"],"names":["React","FetchBody","tableHeader","props","o","Object","keys","map","key","toUpperCase","tableRow","props2","items","item2","row","index","tableFooter","p","values","colors","issue_count","in_Progress","Original_Estimate_in_days","remaining_Estimate_in_days","width","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FetchBody from './fetchBody';\nimport './tableData.css';\nimport './tableEdit.css';\nexport default {\n\n    tableHeader: (props) => {\n        let o = Object.keys(props[0]);\n        return o.map((key)=>{\n             if(key == \"open\" || key == \"accepted\" || key == \"in_Progress\" || key == \"review\" || key ==\"resolved\" || key ==\"done\" ||key ==\"storyPoint\"){\n                return <th key={key}><td class=\"headerBox\">{key.toUpperCase()}</td></th>\n             }\n        return <th key={key}>{key.toUpperCase()}</th>\n                })\n    },\n    \n    tableRow: (props,props2) =>{\n                  \n        let items = props;\n        let item2 = props2;\n        let keys = Object.keys(props[0]);\n        if(item2){\n            return items.map((row, index)=>{\n            return <tr class=\"editRow\" key={index}><FetchBody.RenderProgressRow key={index} data={row} keys={keys} item={item2} /></tr>\n            })\n        }\n        return items.map((row, index)=>{\n        return <tr key={index}><FetchBody.RenderRow key={index} data={row} keys={keys} /></tr>\n        })\n    },\n\n    tableFooter: (props,p) =>{\n\n        let o = Object.values(props)\n        if(p){\n            let colors='';\n            if(props.issue_count || props.in_Progress){\n                return colors = \"#42526e\"\n            }\n            if(props.Original_Estimate_in_days){\n                return colors=\"#42526e\";\n            }\n            if(props.remaining_Estimate_in_days){\n                return colors=\"#654982\";\n            }\n            if(props == 'time_Spent_in_days'){\n                return colors = '#14892c'\n                    \n                       \n            }\n         return o.map((key)=>(\n             \n         <td class=\"editRow\" key={key}><b>{key}</b>&nbsp;\n                <div class=\"progress\">\n                <div class=\"inside\" style={{width:100+'px',backgroundColor:`${colors}`}} >_</div>&nbsp;\n                </div><b>100%</b>\n        </td>))\n        }\n\n        else{\n            return o.map((key)=>(\n            <td class=\"editRow\" key={key}><b>{key}</b></td>))\n        }\n    }\n }\n"]},"metadata":{},"sourceType":"module"}