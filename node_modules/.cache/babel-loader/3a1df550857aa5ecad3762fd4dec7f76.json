{"ast":null,"code":"\"use strict\";\n\nmodule.exports = SearchClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/search'\r\n *\r\n * @param {JiraClient} jiraClient\r\n * @constructor SearchClient\r\n */\n\nfunction SearchClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Searches for issues using JQL.\r\n   *\r\n   * Sorting the jql parameter is a full JQL expression, and includes an ORDER BY clause.\r\n   *\r\n   * The fields param (which can be specified multiple times) gives a comma-separated list of fields to include in\r\n   * the response. This can be used to retrieve a subset of fields. A particular field can be excluded by prefixing\r\n   * it with a minus.\r\n   *\r\n   * By default, only navigable (*navigable) fields are returned in this search resource. Note: the default is\r\n   * different in the get-issue resource -- the default there all fields (*all).\r\n   *\r\n   * * *all - include all fields\r\n   * * navigable - include just navigable fields\r\n   * * summary,comment - include just the summary and comments\r\n   * * -description - include navigable fields except the description (the default is *navigable for search)\r\n   * * *all,-comment - include everything except comments\r\n   *\r\n   * Expanding Issues in the Search Result: It is possible to expand the issues returned by directly specifying the\r\n   * expansion on the expand parameter passed in to this resources.\r\n   *\r\n   * For instance, to expand the \"changelog\" for all the issues on the search result, it is neccesary to specify\r\n   * \"changelog\" as one of the values to expand.\r\n   *\r\n   * @method search\r\n   * @memberOf SearchClient#\r\n   * @param opts The options for the search.\r\n   * @param {GET | POST} [opts.method=POST] search request method\r\n   * @param {string} [opts.jql] The JQL query string\r\n   * @param {number} [opts.startAt=0] The index of the first issue to return (0-based)\r\n   * @param {number} [opts.maxResults=50] The maximum number of issues to return (defaults to 50). The maximum allowable\r\n   *     value is dictated by the JIRA property 'jira.search.views.default.max'. If you specify a value that is\r\n   *     higher than this number, your search results will be truncated.\r\n   * @param {string} [opts.validateQuery=strict] Whether to validate the JQL query\r\n   * @param {Array<string>} [opts.fields] The list of fields to return for each issue. By default, all navigable fields are\r\n   *     returned.\r\n   * @param {Array<string>} [opts.expand] A list of the parameters to expand.\r\n   * @param {Array<string>} [opts.properties] A list of the properties to include (5 max).\r\n   * @param {boolean} [opts.fieldsByKeys=false] Reference fields by their key (rather than ID). \r\n   * @param {callback} [callback] Called with the search results.\r\n   * @return {Promise} Resolved with the search results.\r\n   */\n\n  this.search = function (opts, callback) {\n    opts = opts || {};\n    opts.method = (opts.method || 'POST').toUpperCase();\n    var options = {\n      uri: this.jiraClient.buildURL('/search'),\n      method: opts.method,\n      json: true,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      followAllRedirects: true,\n      timeout: opts.timeout || 10000\n    };\n    var fields = opts.method === 'POST' ? opts.fields : opts.fields && opts.fields.join(',');\n    var expand = opts.method === 'POST' ? opts.expand : opts.expand && opts.expand.join(',');\n    var properties = opts.method === 'POST' ? opts.properties : opts.properties && options.properties.join(',');\n    var search_options = {\n      jql: opts.jql,\n      startAt: opts.startAt || 0,\n      maxResults: opts.maxResults || 50,\n      validateQuery: opts.validateQuery,\n      fields,\n      expand,\n      properties,\n      fieldsByKeys: !!opts.fieldsByKeys\n    };\n\n    if (opts.method === 'POST') {\n      options.body = search_options;\n    } else {\n      options.qs = search_options;\n    }\n\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}