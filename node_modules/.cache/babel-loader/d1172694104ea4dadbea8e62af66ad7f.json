{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js\";\nimport React from 'react';\nimport superagent from 'superagent';\n\nclass Fetch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      actualData: []\n    };\n  }\n\n  callFunction() {}\n\n  async componentDidMount() {\n    const response = await superagent.get(\"https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC\").set('Access-Control-Allow-Credentials', '*').set('Accept', 'application/json').set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ='); //const response = await fetch(`https://api.coinmarketcap.com/v1/ticker/?limit=10`);\n    // const json = await response.json();\n\n    console.log(\"response : \", response.body.length);\n\n    for (let i = 0; i < response.body.length; i++) {\n      this.setState({\n        data: [...this.state.data, response.body[i].key]\n      });\n    }\n\n    console.log(this.state.data);\n    const response2 = await console.log(this.state.data.length);\n\n    for (let i = 0; i < this.state.data.length; i++) {\n      superagent.get(\"https://madhvi.atlassian.net/rest/api/3/search?jql=assignee=\".concat(this.state.data[i])).set('Access-Control-Allow-Credentials', '*').set('Accept', 'application/json').set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=') // this.setState({ actualData: [...this.state.actualData,response2.body]});\n      // //console.log(`https://madhvi.atlassian.net/rest/api/3/search?jql=assignee=${this.state.data[i]}`);\n      // // console.log(\"response 2 : \",response2);\n      // console.log(\"actual data : \",this.state.actualData);\n      //console.log(\"actual data : \",response2);\n      .end((err, res) => {\n        if (err) {\n          return console.log(\"error : \", err);\n        } //console.log('this.state ->', this.state.newArray);\n\n\n        let timeOriginalEstimate = 0;\n        let storyPoint = 0;\n        let timeEstimate = 0;\n        let timeSpent = 0;\n        let count = res.body.total;\n\n        for (let i = 0; i < count; i++) {\n          storyPoint = storyPoint + res.body.issues[i].fields.customfield_10024;\n          timeEstimate = timeEstimate + res.body.issues[i].fields.timeestimate;\n          timeSpent = timeSpent + res.body.issues[i].fields.timespent;\n          timeOriginalEstimate = timeOriginalEstimate + res.body.issues[i].fields.timeoriginalestimate;\n        }\n\n        console.log(count);\n        let obj = {\n          total: res.body.total,\n          user: res.body.issues[0].fields.assignee.name,\n          timeOriginalEstimate: timeOriginalEstimate / 3600,\n          storyPoint: storyPoint,\n          timeEstimate: timeEstimate / 3600,\n          timeSpent: timeSpent / 3600\n        }; // issueLength:res.body.issue.length()\n\n        this.setState({\n          actualData: [...this.state.actualData, obj]\n        }); //console.log(\"state : \",this.state.actualData);\n      });\n    }\n  } // \n\n\n  render() {\n    // debugger;\n    let posts = React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.actualData.map(id => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, id.total)))));\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Show\"), posts);\n  }\n\n}\n\nexport default Fetch;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js"],"names":["React","superagent","Fetch","Component","state","data","actualData","callFunction","componentDidMount","response","get","set","console","log","body","length","i","setState","key","response2","end","err","res","timeOriginalEstimate","storyPoint","timeEstimate","timeSpent","count","total","issues","fields","customfield_10024","timeestimate","timespent","timeoriginalestimate","obj","user","assignee","name","render","posts","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport superagent from 'superagent';\nclass Fetch extends React.Component{\n\n  state={\n        data:[],\n        actualData:[]\n  }\n\n  callFunction(){\n\n  }\n  async componentDidMount (){ \n    const response = await \n    superagent\n    .get(`https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC`)\n    .set('Access-Control-Allow-Credentials', '*')\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n    //const response = await fetch(`https://api.coinmarketcap.com/v1/ticker/?limit=10`);\n    // const json = await response.json();\n    console.log(\"response : \",response.body.length);\n    for(let i=0;i<response.body.length;i++){\n      this.setState({ data: [...this.state.data,response.body[i].key ]});\n    }\n    console.log(this.state.data);\n    const response2 = await \n    console.log(this.state.data.length);\n    for(let i=0;i<this.state.data.length;i++){\n      superagent\n      .get(`https://madhvi.atlassian.net/rest/api/3/search?jql=assignee=${this.state.data[i]}`)\n      .set('Access-Control-Allow-Credentials', '*')\n      .set('Accept', 'application/json')\n      .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n      // this.setState({ actualData: [...this.state.actualData,response2.body]});\n      // //console.log(`https://madhvi.atlassian.net/rest/api/3/search?jql=assignee=${this.state.data[i]}`);\n      // // console.log(\"response 2 : \",response2);\n      // console.log(\"actual data : \",this.state.actualData);\n      //console.log(\"actual data : \",response2);\n      .end((err, res) => {\n        if (err) { return console.log(\"error : \",err); }\n      //console.log('this.state ->', this.state.newArray);\n      let timeOriginalEstimate = 0;\n                let storyPoint=0;\n                let timeEstimate=0;\n                let timeSpent=0;\n                let count = res.body.total;\n                for(let i =0;i<count ;i++){\n                    storyPoint =storyPoint +  res.body.issues[i].fields.customfield_10024;\n                    timeEstimate = timeEstimate + res.body.issues[i].fields.timeestimate;\n                    timeSpent = timeSpent + res.body.issues[i].fields.timespent;\n                    timeOriginalEstimate = timeOriginalEstimate + res.body.issues[i].fields.timeoriginalestimate;\n                }\n                console.log(count);\n                let obj ={\n                    total : res.body.total,\n                    user:res.body.issues[0].fields.assignee.name,\n                    timeOriginalEstimate:timeOriginalEstimate/3600,\n                    storyPoint:storyPoint,\n                    timeEstimate:timeEstimate/3600,\n                    timeSpent:timeSpent/3600\n                }\n                    // issueLength:res.body.issue.length()\n      this.setState({actualData:[...this.state.actualData,obj]})\n      \n      //console.log(\"state : \",this.state.actualData);\n      })\n    }\n    \n  }\n\n\n  // \n\n  render(){\n   // debugger;\n    let posts = <table>\n    \n    {this.state.actualData.map(id => (\n      <tr>\n         <td><b>{id.total}</b></td>\n      </tr>\n       \n    ))}\n  \n  </table>\n    return(\n      <>\n  <h1>Show</h1>\n  {posts}\n      \n      </>\n\n    )\n  }\n}\n\n\nexport default Fetch;"]},"metadata":{},"sourceType":"module"}