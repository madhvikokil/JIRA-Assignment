{"ast":null,"code":"\"use strict\";\n\nmodule.exports = GroupUserPickerClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/groupuserpicker'\r\n * @param {JiraClient} jiraClient\r\n * @constructor GroupUserPickerClient\r\n */\n\nfunction GroupUserPickerClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Returns a list of users and groups matching query with highlighting. This resource cannot be accessed\r\n   * anonymously.\r\n   *\r\n   * @method findUsersAndGroups\r\n   * @memberOf GroupUserPickerClient#\r\n   * @param {Object} opts The request options to send to the Jira API.\r\n   * @param {string} opts.query A string used to search username, Name or e-mail address\r\n   * @param {number} [opts.maxResults] the maximum number of users to return (defaults to 50). The maximum allowed\r\n   *     value is 1000. If you specify a value that is higher than this number, your search results will be\r\n   *     truncated.\r\n   * @param {boolean} [opts.showAvatar] Whether to show the avatar\r\n   * @param {string} [opts.fieldId] The custom field id, if this request comes from a custom field, such as a user\r\n   *     picker. Optional.\r\n   * @param {string} [opts.projectId] The list of project ids to further restrict the search This parameter can occur\r\n   *     multiple times to pass in multiple project ids. Comma separated value is not supported. This parameter is\r\n   *     only used when fieldId is present.\r\n   * @param {string} [opts.issueTypeId] The list of issue type ids to further restrict the search. This parameter can\r\n   *     occur multiple times to pass in multiple issue type ids. Comma separated value is not supported. Special\r\n   *     values such as -1 (all standard issue types), -2 (all subtask issue types) are supported. This parameter is\r\n   *     only used when fieldId is present.\r\n   * @param [callback] Called when the search is completed.\r\n   * @return {Promise} Resolved when the search is completed.\r\n   */\n\n  this.findUsersAndGroups = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/groupuserpicker'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true,\n      qs: {\n        query: opts.query,\n        maxResults: opts.maxResults,\n        showAvatar: opts.showAvatar,\n        fieldId: opts.fieldId,\n        projectId: opts.projectId,\n        issueTypeId: opts.issueTypeId\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}