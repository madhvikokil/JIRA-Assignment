{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchTable.js\";\nimport React from 'react';\nexport default {\n  tableHeader: props => {\n    let o = Object.keys(props[0]);\n    return o.map(key => {\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  },\n  tableRow: props => {\n    // var items = props;\n    // let propsLength = props.length;\n    // for(let i=0;i<propsLength;i++){\n    //         let o = Object.values(props[i]);\n    // return items.map((row, index)=>{\n    // return <tr key={index}><td>{o}</td></tr>\n    // })\n    let lengthOfProps = props.length;\n    return props.map(row => {\n      return React.createElement(React.Fragment, null, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        row: row.total,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, key.toUpperCase()), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, row.user)));\n    });\n  }\n};","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/utility/fetchTable.js"],"names":["React","tableHeader","props","o","Object","keys","map","key","toUpperCase","tableRow","lengthOfProps","length","row","total","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AAEXC,EAAAA,WAAW,EAAGC,KAAD,IAAW;AACpB,QAAIC,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAAC,CAAD,CAAjB,CAAR;AACA,WAAOC,CAAC,CAACG,GAAF,CAAOC,GAAD,IAAO;AACZ,aAAO;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeA,GAAG,CAACC,WAAJ,EAAf,CAAP;AACC,KAFF,CAAP;AAGH,GAPU;AASXC,EAAAA,QAAQ,EAAGP,KAAD,IAAU;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,QAAIQ,aAAa,GAAGR,KAAK,CAACS,MAA1B;AACA,WAAOT,KAAK,CAACI,GAAN,CAAWM,GAAD,IAAO;AACpB,aAAQ,0CAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF;AAAI,QAAA,GAAG,EAAEA,GAAG,CAACC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBN,GAAG,CAACC,WAAJ,EAArB,CADE,EAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKI,GAAG,CAACE,IAAT,CAFU,CAAF,CAAR;AAOH,KARM,CAAP;AAWV;AA/Ba,CAAf","sourcesContent":["import React from 'react';\nexport default {\n\n    tableHeader: (props) => {\n        let o = Object.keys(props[0]);\n        return o.map((key)=>{\n                return <th key={key}>{key.toUpperCase()}</th>\n                })\n    },\n    \n    tableRow: (props) =>{\n\n        // var items = props;\n        // let propsLength = props.length;\n        // for(let i=0;i<propsLength;i++){\n        //         let o = Object.values(props[i]);\n        // return items.map((row, index)=>{\n        // return <tr key={index}><td>{o}</td></tr>\n        // })\n\n            let lengthOfProps = props.length;\n            return props.map((row)=>{\n                return (<><tr>\n                        <th row={row.total}>{key.toUpperCase()}</th>\n                <td>{row.user}</td>\n                        </tr></>)\n               \n                  \n                \n            })\n        \n        \n }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}