{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js\";\nimport React from 'react';\nimport FetchApi from '../utility/fetchApi';\nimport FetchTable from '../utility/fetchTable';\nimport { Link } from 'react-router-dom';\n\nclass Fetch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      actualData: [],\n      length: ''\n    };\n\n    this.componentDidMount = async () => {\n      const data1 = await this.data();\n      console.log(\"DATA 1 ===>>>\", data1);\n      const data2 = await this.data2();\n      console.log(\"Data 2  => \", data2);\n      console.log(\"updated array : \", this.state.actualData); // const data3 = await this.tableData();\n      // console.log(data3);\n    };\n\n    this.tableData = () => {\n      FetchTable.tableHeader(this.state.data);\n    };\n\n    this.data = () => {\n      return new Promise((resolve, reject) => {\n        let url = localStorage.getItem('url');\n        let arrayOfUsers = [];\n        FetchApi.callApi(\"\".concat(url, \"/rest/api/2/user/assignable/search?project=REAC\")).then(res => {\n          console.log(\"response : \", res);\n          console.log(res.length);\n\n          for (let i = 0; i < res.length; i++) {\n            arrayOfUsers.push(res[i].name);\n          }\n\n          this.setState({\n            data: arrayOfUsers\n          });\n          resolve(arrayOfUsers);\n        }).catch(error => {\n          console.log(\"error : \", error);\n          reject(error);\n        });\n      });\n    };\n\n    this.data2 = () => {\n      let url = localStorage.getItem('url');\n      let array = [];\n      return new Promise((resolve, reject) => {\n        for (let i = 0; i < this.state.data.length; i++) {\n          const api = FetchApi.callApi(\"\".concat(url, \"/rest/api/3/search?jql=assignee=\").concat(this.state.data[i]));\n          api.then(res => {\n            console.log(\"response after data fetching : \", res);\n            let timeOriginalEstimate = 0;\n            let storyPoint = 0;\n            let timeEstimate = 0;\n            let timeSpent = 0;\n            let count = res.total;\n\n            for (let i = 0; i < count; i++) {\n              storyPoint = storyPoint + res.issues[i].fields.customfield_10024;\n              timeEstimate = timeEstimate + res.issues[i].fields.timeestimate;\n              timeSpent = timeSpent + res.issues[i].fields.timespent;\n              timeOriginalEstimate = timeOriginalEstimate + res.issues[i].fields.timeoriginalestimate;\n            } //console.log(count);\n\n\n            let obj = {\n              user: res.issues[0].fields.assignee.name,\n              issue_count: res.total,\n              story_Point: storyPoint,\n              Original_Estimate: timeOriginalEstimate / 3600,\n              remaining_Estimate: timeEstimate / 3600,\n              time_Spent: timeSpent / 3600 // issueLength:res.issue.length()\n\n            }; // array.push(obj);\n            // let s = [...obj];\n\n            console.log(\"pushed array : \", array);\n            this.setState({\n              actualData: [...this.state.actualData, obj]\n            });\n\n            if (this.state.data.length - 1 == this.state.actualData.length - 1) {\n              resolve(array);\n            }\n          }).catch(error => {\n            console.log(\"error : \", error);\n            reject(error);\n          });\n        }\n      });\n    };\n\n    this.anotherTable = () => {\n      console.log(\"Next Table\");\n      this.props.history.push(\"/tableSheet/table2\");\n    };\n\n    this.logoutHandler = () => {\n      console.log(\"logout\");\n    };\n  }\n\n  render() {\n    debugger;\n    let posts;\n\n    if (this.state.actualData.length > 0) {\n      posts = React.createElement(React.Fragment, null, React.createElement(\"table\", {\n        class: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        class: \"thead-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, FetchTable.tableHeader(this.state.actualData))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, FetchTable.tableRow(this.state.actualData))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Release Multiple Output Statistics\"), React.createElement(Button, {\n      class: \"ui right floated primary button\",\n      as: Link,\n      to: \"/logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Log out\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), posts);\n  }\n\n}\n\nexport default Fetch;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js"],"names":["React","FetchApi","FetchTable","Link","Fetch","Component","state","data","actualData","length","componentDidMount","data1","console","log","data2","tableData","tableHeader","Promise","resolve","reject","url","localStorage","getItem","arrayOfUsers","callApi","then","res","i","push","name","setState","catch","error","array","api","timeOriginalEstimate","storyPoint","timeEstimate","timeSpent","count","total","issues","fields","customfield_10024","timeestimate","timespent","timeoriginalestimate","obj","user","assignee","issue_count","story_Point","Original_Estimate","remaining_Estimate","time_Spent","anotherTable","props","history","logoutHandler","render","posts","tableRow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FetchApi from '../utility/fetchApi';\nimport FetchTable from '../utility/fetchTable';\nimport { Link } from 'react-router-dom'\n\nclass Fetch extends React.Component{\n\n  state={\n        data:[],\n        actualData:[],\n        length:''\n  }\n\n \n     componentDidMount =async()=>{ \n\n    const data1 = await this.data();\n    console.log(\"DATA 1 ===>>>\", data1);\n    const data2 = await this.data2();\n    console.log(\"Data 2  => \",data2);\n    console.log(\"updated array : \",this.state.actualData);\n    // const data3 = await this.tableData();\n    // console.log(data3);\n  \n    }\n\n    tableData=()=>{\n      FetchTable.tableHeader(this.state.data);\n    }\n\n    data =() =>{\n     return new Promise( (resolve, reject) => {\n      let url = localStorage.getItem('url');\n      let arrayOfUsers = [];\n      \n      FetchApi.callApi(`${url}/rest/api/2/user/assignable/search?project=REAC`).then(res => {\n        console.log(\"response : \",res);\n        console.log(res.length);\n        for(let i=0;i<res.length;i++){\n              arrayOfUsers.push(res[i].name);\n            \n            }\n            \n            this.setState({data : arrayOfUsers});\n            resolve(arrayOfUsers);\n            \n      \n      }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n\n     } )\n    }\n\n    data2=()=>{\n      let url = localStorage.getItem('url');\n      let array = [];\n      return new Promise( (resolve, reject) => {\n\n      for(let i=0;i<this.state.data.length;i++){\n        const api = FetchApi.callApi(`${url}/rest/api/3/search?jql=assignee=${this.state.data[i]}`);\n      api.then(res => {\n        console.log(\"response after data fetching : \",res);\n        let timeOriginalEstimate = 0;\n        let storyPoint=0;\n        let timeEstimate=0;\n        let timeSpent=0;\n        let count = res.total;\n        for(let i =0;i<count ;i++){\n            storyPoint =storyPoint +  res.issues[i].fields.customfield_10024;\n            timeEstimate = timeEstimate + res.issues[i].fields.timeestimate;\n            timeSpent = timeSpent + res.issues[i].fields.timespent;\n            timeOriginalEstimate = timeOriginalEstimate + res.issues[i].fields.timeoriginalestimate;\n        }\n        //console.log(count);\n        let obj ={\n            user:res.issues[0].fields.assignee.name,\n            issue_count : res.total,\n            story_Point:storyPoint,\n            Original_Estimate:timeOriginalEstimate/3600,\n            remaining_Estimate:timeEstimate/3600,\n            time_Spent:timeSpent/3600\n            // issueLength:res.issue.length()\n        }\n        // array.push(obj);\n        // let s = [...obj];\n        console.log(\"pushed array : \",array);\n        this.setState({actualData:[...this.state.actualData,obj]});\n        if(this.state.data.length-1 == this.state.actualData.length-1){\n          resolve(array);\n        }\n        \n      }).catch(error => {\n        console.log(\"error : \",error);\n        reject(error);\n          })\n      }  \n        })\n      \n\n    }\n\n    anotherTable=()=>{\n      console.log(\"Next Table\");\n      this.props.history.push(\"/tableSheet/table2\");\n    }\n        // if(arrayOfUsers.length == 5){\n        //   for(let i=0;i<5;i++){\n        //     const anotherApi =  FetchApi.callApi(`${url}/rest/api/3/search?jql=assignee=${arrayOfUsers[i]}`);\n        //     anotherApi.then(response => {\n        //       console.log(\"response : \",response);\n        //     })\n        //   }\n         \n        // }\n         \n        \n        \n        \n    // <FetchApi url='https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC'/>\n    //url ={'https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC'}/>\n  //   // superagent\n  //   // .get(`https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC`)\n  //   // .set('Access-Control-Allow-Credentials', '*')\n  //   // .set('Accept', 'application/json')\n  //   // .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n   \n  //   console.log(\"response : \",response.body.length);\n  //   for(let i=0;i<response.body.length;i++){\n  //     arrayOfUsers.push(response.body[i].key);\n      \n  //   }\n  //   console.log(\"array : \",arrayOfUsers);\n    \n  //   for(let i=0;i<arrayOfUsers.length;i++){\n  //     const re = await \n  //     superagent\n  //     .get(`https://madhvi.atlassian.net/rest/api/3/search?jql=assignee=${arrayOfUsers[i]}`)\n  //     .set('Access-Control-Allow-Credentials', '*')\n  //     .set('Accept', 'application/json')\n  //     .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n     \n  //     .end((err, res) => {\n  //       if (err) { return console.log(\"error : \",err); }\n  //       console.log(\"url 2 \");\n  //     let timeOriginalEstimate = 0;\n  //     let storyPoint=0;\n  //     let timeEstimate=0;\n  //     let timeSpent=0;\n  //     let count = res.total;\n  //     for(let i =0;i<count ;i++){\n  //         storyPoint =storyPoint +  res.issues[i].fields.customfield_10024;\n  //         timeEstimate = timeEstimate + res.issues[i].fields.timeestimate;\n  //         timeSpent = timeSpent + res.issues[i].fields.timespent;\n  //         timeOriginalEstimate = timeOriginalEstimate + res.issues[i].fields.timeoriginalestimate;\n  //     }\n      \n  //    obj ={\n  //         total : res.total,\n  //         user:res.issues[0].fields.assignee.name,\n  //         timeOriginalEstimate:timeOriginalEstimate/3600,\n  //         storyPoint:storyPoint,\n  //         timeEstimate:timeEstimate/3600,\n  //         timeSpent:timeSpent/3600\n  //         // issueLength:res.issue.length()\n  //     }\n  //     dataOfUsers.push(obj);\n  //     })\n  //   }\n  //   //this.setState({actualData:obj});\n    \n  //   this.setState({actualData:dataOfUsers});\n  //   console.log(\"this.state.actualData : \", this.state.actualData);\n   \n  // }\n\n  // getKeys=() => {\n  //   console.log(\"get \");\n  \n  logoutHandler=() =>{\n    console.log(\"logout\");\n  }\n  render(){\n    debugger;\n    let posts ;\n    if(this.state.actualData.length > 0) {\n      posts =   <>\n        <table class=\"table\">\n          <thead class=\"thead-dark\">\n            <tr>\n              {FetchTable.tableHeader(this.state.actualData)}\n            </tr>\n          </thead>\n          <tbody>\n              {FetchTable.tableRow(this.state.actualData)}\n          </tbody>\n        </table><hr/> \n      <br/>\n      \n        </>\n    }\n  \n  return(\n      <><br />\n  <h1>Release Multiple Output Statistics</h1>\n  <Button class=\"ui right floated primary button\"  as={Link} to ='/logout'>Log out</Button>\n  <br /><br />\n  {posts}\n      \n      </>\n\n    )\n  }\n}\n\n\nexport default Fetch;"]},"metadata":{},"sourceType":"module"}