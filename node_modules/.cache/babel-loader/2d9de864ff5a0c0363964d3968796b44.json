{"ast":null,"code":"var Messages = require('./messages');\n\nrequire('./lang/en');\n\nvar require_method = require;\nvar container = {\n  messages: {},\n\n  /**\n   * Set messages for language\n   *\n   * @param {string} lang\n   * @param {object} rawMessages\n   * @return {void}\n   */\n  _set: function (lang, rawMessages) {\n    this.messages[lang] = rawMessages;\n  },\n\n  /**\n   * Set message for given language's rule.\n   *\n   * @param {string} lang\n   * @param {string} attribute\n   * @param {string|object} message\n   * @return {void}\n   */\n  _setRuleMessage: function (lang, attribute, message) {\n    this._load(lang);\n\n    if (message === undefined) {\n      message = this.messages[lang].def;\n    }\n\n    this.messages[lang][attribute] = message;\n  },\n\n  /**\n   * Load messages (if not already loaded)\n   *\n   * @param  {string} lang\n   * @return {void}\n   */\n  _load: function (lang) {\n    if (!this.messages[lang]) {\n      try {\n        var rawMessages = require_method('./lang/' + lang);\n\n        this._set(lang, rawMessages);\n      } catch (e) {}\n    }\n  },\n\n  /**\n   * Get raw messages for language\n   *\n   * @param  {string} lang\n   * @return {object}\n   */\n  _get: function (lang) {\n    this._load(lang);\n\n    return this.messages[lang];\n  },\n\n  /**\n   * Make messages for given language\n   *\n   * @param  {string} lang\n   * @return {Messages}\n   */\n  _make: function (lang) {\n    this._load(lang);\n\n    return new Messages(lang, this.messages[lang]);\n  }\n};\nmodule.exports = container;","map":null,"metadata":{},"sourceType":"script"}