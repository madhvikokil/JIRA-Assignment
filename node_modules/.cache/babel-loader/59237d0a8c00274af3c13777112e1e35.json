{"ast":null,"code":"\"use strict\";\n\nmodule.exports = MyPermissionsClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/api/2/mypermissions'\r\n *\r\n * @param {JiraClient} jiraClient\r\n * @constructor MyPermissionsClient\r\n */\n\nfunction MyPermissionsClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Returns all permissions in the system and whether the currently logged in user has them. You can optionally\r\n   * provide a specific context to get permissions for (projectKey OR projectId OR issueKey OR issueId)\r\n   *\r\n   * * When no context supplied the project related permissions will return true if the user has that permission in\r\n   * ANY project\r\n   * * If a project context is provided, project related permissions will return true if the user has the permissions\r\n   * in the specified project. For permissions that are determined using issue data (e.g Current Assignee), true will\r\n   * be returned if the user meets the permission criteria in ANY issue in that project\r\n   * * If an issue context is provided, it will return whether or not the user has each permission in that specific\r\n   * issue\r\n   *\r\n   * NB: The above means that for issue-level permissions (EDIT_ISSUE for example), hasPermission may be true when no\r\n   * context is provided, or when a project context is provided, but may be false for any given (or all) issues. This\r\n   * would occur (for example) if Reporters were given the EDIT_ISSUE permission. This is because any user could be a\r\n   * reporter, except in the context of a concrete issue, where the reporter is known.\r\n   *\r\n   * Global permissions will still be returned for all scopes.\r\n   *\r\n   * @method getMyPermissions\r\n   * @memberOf MyPermissionsClient#\r\n   * @param opts The request options sent to the Jira API\r\n   * @param [callback] Called when the permissions have been returned.\r\n   * @return {Promise} Resolved when the permissions have been returned.\r\n   */\n\n  this.getMyPermissions = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildURL('/mypermissions'),\n      method: 'GET',\n      json: true,\n      followAllRedirects: true,\n      qs: {\n        issueId: opts.issueId,\n        issueKey: opts.issueKey,\n        projectId: opts.projectId,\n        projectKey: opts.projectKey\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}