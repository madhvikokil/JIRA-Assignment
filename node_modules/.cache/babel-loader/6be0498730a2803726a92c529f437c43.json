{"ast":null,"code":"var _jsxFileName = \"/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js\";\nimport React from 'react';\nimport superagent from 'superagent';\n\nclass Fetch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null,\n      actualData: []\n    };\n\n    this.dataFetching = () => {\n      for (let i = 0; i < arrayOfUsers.length; i++) {\n        superagent.get(\"https://madhvi.atlassian.net/rest/api/3/search?jql=assignee=\".concat(arrayOfUsers[i])).set('Access-Control-Allow-Credentials', '*').set('Accept', 'application/json').set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=').end((err, res) => {\n          if (err) {\n            return console.log(\"error : \", err);\n          }\n\n          console.log(\"url 2 \");\n          let timeOriginalEstimate = 0;\n          let storyPoint = 0;\n          let timeEstimate = 0;\n          let timeSpent = 0;\n          let count = res.body.total;\n\n          for (let i = 0; i < count; i++) {\n            storyPoint = storyPoint + res.body.issues[i].fields.customfield_10024;\n            timeEstimate = timeEstimate + res.body.issues[i].fields.timeestimate;\n            timeSpent = timeSpent + res.body.issues[i].fields.timespent;\n            timeOriginalEstimate = timeOriginalEstimate + res.body.issues[i].fields.timeoriginalestimate;\n          }\n\n          obj = {\n            total: res.body.total,\n            user: res.body.issues[0].fields.assignee.name,\n            timeOriginalEstimate: timeOriginalEstimate / 3600,\n            storyPoint: storyPoint,\n            timeEstimate: timeEstimate / 3600,\n            timeSpent: timeSpent / 3600 // issueLength:res.body.issue.length()\n\n          };\n          dataOfUsers.push(obj);\n        });\n      } //this.setState({actualData:obj});\n\n\n      this.setState({\n        actualData: dataOfUsers\n      });\n      console.log(\"this.state.actualData : \", this.state.actualData);\n    };\n\n    this.getKeys = () => {\n      console.log(\"get \");\n    };\n  }\n\n  callFunction() {}\n\n  async componentDidMount() {\n    let arrayOfUsers = [];\n    const response = await superagent.get(\"https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC\").set('Access-Control-Allow-Credentials', '*').set('Accept', 'application/json').set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=');\n    console.log(\"response : \", response.body.length);\n\n    for (let i = 0; i < response.body.length; i++) {\n      arrayOfUsers.push(response.body[i].key);\n    }\n\n    console.log(\"array : \", arrayOfUsers);\n    const fetch = await this.dataFetching();\n  }\n\n  render() {\n    debugger;\n    let posts = React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.actualData.map(id => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, id.user)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, id.timeOriginalEstimate)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, id.timeEstimate)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, id.storyPoint)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, id.timeSpent)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, id.total)))));\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Show\"), posts);\n  }\n\n}\n\nexport default Fetch;","map":{"version":3,"sources":["/home/madhavi/Documents/jira-assignment/JIRA-Assignment/src/component/fetch.js"],"names":["React","superagent","Fetch","Component","state","data","actualData","dataFetching","i","arrayOfUsers","length","get","set","end","err","res","console","log","timeOriginalEstimate","storyPoint","timeEstimate","timeSpent","count","body","total","issues","fields","customfield_10024","timeestimate","timespent","timeoriginalestimate","obj","user","assignee","name","dataOfUsers","push","setState","getKeys","callFunction","componentDidMount","response","key","fetch","render","posts","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport superagent from 'superagent';\nclass Fetch extends React.Component{\n\n  state={\n        data:null,\n        actualData:[]\n  }\n\n  callFunction(){\n\n  }\n  async componentDidMount (){ \n\n    let arrayOfUsers = [];\n    const response = await \n    superagent\n    .get(`https://madhvi.atlassian.net/rest/api/2/user/assignable/search?project=REAC`)\n    .set('Access-Control-Allow-Credentials', '*')\n    .set('Accept', 'application/json')\n    .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n   \n    console.log(\"response : \",response.body.length);\n    for(let i=0;i<response.body.length;i++){\n      arrayOfUsers.push(response.body[i].key);\n      \n    }\n    console.log(\"array : \",arrayOfUsers);\n    const fetch = await this.dataFetching();\n  }\n\n  dataFetching=()=>{\n    for(let i=0;i<arrayOfUsers.length;i++){\n      \n      superagent\n      .get(`https://madhvi.atlassian.net/rest/api/3/search?jql=assignee=${arrayOfUsers[i]}`)\n      .set('Access-Control-Allow-Credentials', '*')\n      .set('Accept', 'application/json')\n      .set('Authorization', 'Basic dmFpc2huYXZpLmphd2FuamFsQGN1ZWxvZ2ljLmNvbTo3NmNVSXByaXVDaDlpTm1jZHJXZTA3RDQ=')\n     \n      .end((err, res) => {\n        if (err) { return console.log(\"error : \",err); }\n        console.log(\"url 2 \");\n      let timeOriginalEstimate = 0;\n      let storyPoint=0;\n      let timeEstimate=0;\n      let timeSpent=0;\n      let count = res.body.total;\n      for(let i =0;i<count ;i++){\n          storyPoint =storyPoint +  res.body.issues[i].fields.customfield_10024;\n          timeEstimate = timeEstimate + res.body.issues[i].fields.timeestimate;\n          timeSpent = timeSpent + res.body.issues[i].fields.timespent;\n          timeOriginalEstimate = timeOriginalEstimate + res.body.issues[i].fields.timeoriginalestimate;\n      }\n      \n     obj ={\n          total : res.body.total,\n          user:res.body.issues[0].fields.assignee.name,\n          timeOriginalEstimate:timeOriginalEstimate/3600,\n          storyPoint:storyPoint,\n          timeEstimate:timeEstimate/3600,\n          timeSpent:timeSpent/3600\n          // issueLength:res.body.issue.length()\n      }\n      dataOfUsers.push(obj);\n      })\n    }\n    //this.setState({actualData:obj});\n    \n    this.setState({actualData:dataOfUsers});\n    console.log(\"this.state.actualData : \", this.state.actualData);\n  }\n    \n   \n  \n\n  getKeys=() => {\n    console.log(\"get \");\n  }\n\n  render(){\n    debugger;\n    let posts = <table>\n    \n    {/* <tr>\n      <th>{this.getKeys()}</th>\n    </tr> */}\n    {this.state.actualData.map(id => (\n      <tr>\n         <td><b>{id.user}</b></td>\n         <td><b>{id.timeOriginalEstimate}</b></td>\n         <td><b>{id.timeEstimate}</b></td>\n         <td><b>{id.storyPoint}</b></td>\n         <td><b>{id.timeSpent}</b></td>\n         <td><b>{id.total}</b></td>\n      </tr>\n       \n    ))}\n  \n  </table>\n    return(\n      <>\n  <h1>Show</h1>\n  {posts}\n      \n      </>\n\n    )\n  }\n}\n\n\nexport default Fetch;"]},"metadata":{},"sourceType":"module"}