{"ast":null,"code":"\"use strict\";\n\nmodule.exports = AgileBacklogClient;\n/**\r\n * Used to access Jira REST endpoints in '/rest/agile/1.0/backlog'\r\n * @param {JiraClient} jiraClient\r\n * @constructor AgileBacklogClient\r\n */\n\nfunction AgileBacklogClient(jiraClient) {\n  this.jiraClient = jiraClient;\n  /**\r\n   * Move issues to the backlog. This operation is equivalent to remove future and active sprints from a given set of\r\n   * issues. At most 50 issues may be moved at once.\r\n   *\r\n   * @method moveIssuesToBacklog\r\n   * @memberOf AgileBacklogClient#\r\n   * @param opts The request options sent to the Jira API.\r\n   * @param [opts.issues] Array of strings with issues keys or ids\r\n   * @param [callback] Called when the dashboard has been retrieved\r\n   * @return {Promise} Resolved when the dashboard has been retrieved\r\n   */\n\n  this.moveIssuesToBacklog = function (opts, callback) {\n    opts = opts || {};\n    var options = {\n      uri: this.jiraClient.buildAgileURL(\"/backlog/issue\"),\n      method: \"POST\",\n      json: true,\n      followAllRedirects: true,\n      body: {\n        issues: opts.issues\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n  /**\r\n   * Move issues to the backlog of a particular board (if they are already on that board).\r\n   * This operation is equivalent to remove future and active sprints from a given set of issues if the board has sprints\r\n   * If the board does not have sprints this will put the issues back into the backlog from the board. At most 50 issues\r\n   * may be moved at once.\r\n   *\r\n   * @method moveIssuesToBacklogForBoard\r\n   * @memberOf AgileBacklogClient#\r\n   * @param opts The request options sent to the Jira API.\r\n   * @param opts.boardId The agile board id.\r\n   * @param [opts.issues] Array of strings with issues keys or ids\r\n   * @param [opts.rankBeforeIssue] string\r\n   * @param [opts.rankAfterIssue] string\r\n   * @param [opts.rankCustomFieldId] int64\r\n   * @param [callback] Called when the dashboard has been retrieved\r\n   * @return {Promise} Resolved when the dashboard has been retrieved\r\n   */\n\n\n  this.moveIssuesToBacklogForBoard = function (opts, callback) {\n    var options = {\n      uri: this.jiraClient.buildAgileURL(\"/backlog/\" + opts.boardId + \"/issue\"),\n      method: \"POST\",\n      json: true,\n      followAllRedirects: true,\n      body: {\n        issues: opts.issues,\n        rankBeforeIssue: opts.rankBeforeIssue,\n        rankAfterIssue: opts.rankAfterIssue,\n        rankCustomFieldId: opts.rankCustomFieldId\n      }\n    };\n    return this.jiraClient.makeRequest(options, callback);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}